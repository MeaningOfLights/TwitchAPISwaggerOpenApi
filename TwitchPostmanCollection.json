{
	"info": {
		"_postman_id": "45990717-423f-4cd6-b001-b2f45eb1c2d9",
		"name": "Twitch Helix API",
		"description": "The Twitch API is a RESTful API that lets developers build creative integrations for the broader Twitch community. THIS DOCUMENTATION IS NEITHER MAINTAINED BY OR AFFILIATED WITH TWITCH\n\nContact Support:\n Name: TwitchDev\n Email: developers@twitch.tv",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "authentication",
			"item": [
				{
					"name": "GetAccessToken",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://id.twitch.tv/oauth2/token?client_id=&client_secret=&grant_type=client_credentials",
							"protocol": "https",
							"host": [
								"id",
								"twitch",
								"tv"
							],
							"path": [
								"oauth2",
								"token"
							],
							"query": [
								{
									"key": "client_id",
									"value": ""
								},
								{
									"key": "client_secret",
									"value": ""
								},
								{
									"key": "grant_type",
									"value": "client_credentials"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "channels",
			"item": [
				{
					"name": "commercial",
					"item": [
						{
							"name": "Start Commercial",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels/commercial",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels",
										"commercial"
									]
								},
								"description": "Starts a commercial on the specified channel."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/commercial",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"commercial"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/commercial",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"commercial"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"length\": \"<number>\",\n      \"message\": \"<string>\",\n      \"retry_after\": \"<number>\"\n    },\n    {\n      \"length\": \"<number>\",\n      \"message\": \"<string>\",\n      \"retry_after\": \"<number>\"\n    }\n  ]\n}"
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/commercial",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"commercial"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/commercial",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"commercial"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "ads",
					"item": [
						{
							"name": "schedule",
							"item": [
								{
									"name": "snooze",
									"item": [
										{
											"name": "Snooze Next Ad",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "https://id.twitch.tv/oauth2/authorize",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "implicit",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/channels/ads/schedule/snooze?broadcaster_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"channels",
														"ads",
														"schedule",
														"snooze"
													],
													"query": [
														{
															"key": "broadcaster_id",
															"value": "<string>"
														}
													]
												},
												"description": "Pushes back the timestamp of the upcoming automatic mid-roll ad by 5 minutes."
											},
											"response": [
												{
													"name": "Unauthenticated: Missing/invalid Token",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "(Required) ",
																"key": "client_id",
																"value": "<string>"
															},
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/channels/ads/schedule/snooze?broadcaster_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"channels",
																"ads",
																"schedule",
																"snooze"
															],
															"query": [
																{
																	"key": "broadcaster_id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "(Required) ",
																"key": "client_id",
																"value": "<string>"
															},
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/channels/ads/schedule/snooze?broadcaster_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"channels",
																"ads",
																"schedule",
																"snooze"
															],
															"query": [
																{
																	"key": "broadcaster_id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error: Something bad happened on our side",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "(Required) ",
																"key": "client_id",
																"value": "<string>"
															},
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/channels/ads/schedule/snooze?broadcaster_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"channels",
																"ads",
																"schedule",
																"snooze"
															],
															"query": [
																{
																	"key": "broadcaster_id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "(Required) ",
																"key": "client_id",
																"value": "<string>"
															},
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/channels/ads/schedule/snooze?broadcaster_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"channels",
																"ads",
																"schedule",
																"snooze"
															],
															"query": [
																{
																	"key": "broadcaster_id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Get Ad Schedule",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels/ads?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels",
										"ads"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								},
								"description": "Returns ad schedule related information."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/ads?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"ads"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/ads?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"ads"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/ads?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"ads"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/ads?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"ads"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "editors",
					"item": [
						{
							"name": "Get Channel Editors",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels/editors?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels",
										"editors"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the broadcaster’s list editors."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/editors?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"editors"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/editors?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"editors"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"user_id\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"created_at\": \"<string>\"\n    },\n    {\n      \"user_id\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"created_at\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/editors?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"editors"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/editors?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"editors"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "followed",
					"item": [
						{
							"name": "Get Followed Channels",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels/followed?user_id=<string>&broadcaster_id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels",
										"followed"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								},
								"description": "Gets a list of broadcasters that the specified user follows. You can also use this endpoint to see whether a user follows a specific broadcaster."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/followed?user_id=<string>&broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"followed"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/followed?user_id=<string>&broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"followed"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/followed?user_id=<string>&broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"followed"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/followed?user_id=<string>&broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"followed"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "followers",
					"item": [
						{
							"name": "Get Channel Followers",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels/followers?user_id=<string>&broadcaster_id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels",
										"followers"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								},
								"description": "Gets a list of users that follow the specified broadcaster. You can also use this endpoint to see whether a specific user follows the broadcaster."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/followers?user_id=<string>&broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"followers"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/followers?user_id=<string>&broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"followers"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/followers?user_id=<string>&broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"followers"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/followers?user_id=<string>&broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"followers"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "vips",
					"item": [
						{
							"name": "Get VIPs",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels/vips?user_id=<string>&broadcaster_id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels",
										"vips"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								},
								"description": "Gets a list of the broadcaster’s VIPs."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/vips?user_id=<string>&broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"vips"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/vips?user_id=<string>&broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"vips"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/vips?user_id=<string>&broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"vips"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/vips?user_id=<string>&broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"vips"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"user_id\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"user_login\": \"<string>\"\n    },\n    {\n      \"user_id\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"user_login\": \"<string>\"\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Add Channel VIP",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels/vips?user_id=<string>&broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels",
										"vips"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								},
								"description": "Adds the specified user as a VIP in the broadcaster’s channel."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/vips?user_id=<string>&broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"vips"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/vips?user_id=<string>&broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"vips"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/vips?user_id=<string>&broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"vips"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/vips?user_id=<string>&broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"vips"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove Channel VIP",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels/vips?user_id=<string>&broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels",
										"vips"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								},
								"description": "Removes the specified user as a VIP in the broadcaster’s channel."
							},
							"response": [
								{
									"name": "Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/vips?user_id=<string>&broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"vips"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/vips?user_id=<string>&broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"vips"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/vips?user_id=<string>&broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"vips"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channels/vips?user_id=<string>&broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channels",
												"vips"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get Channel Information",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/channels?broadcaster_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"channels"
							],
							"query": [
								{
									"key": "broadcaster_id",
									"value": "<string>"
								}
							]
						},
						"description": "Gets information about one or more channels."
					},
					"response": [
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_language\": \"<string>\",\n      \"game_id\": \"<string>\",\n      \"game_name\": \"<string>\",\n      \"title\": \"<string>\",\n      \"delay\": \"<number>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"content_classification_labels\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_branded_content\": \"<boolean>\"\n    },\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_language\": \"<string>\",\n      \"game_id\": \"<string>\",\n      \"game_name\": \"<string>\",\n      \"title\": \"<string>\",\n      \"delay\": \"<number>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"content_classification_labels\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_branded_content\": \"<boolean>\"\n    }\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Modify Channel Information",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/channels?broadcaster_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"channels"
							],
							"query": [
								{
									"key": "broadcaster_id",
									"value": "<string>"
								}
							]
						},
						"description": "Updates a channel’s properties."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "analytics",
			"item": [
				{
					"name": "extensions",
					"item": [
						{
							"name": "Get Extension Analytics",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/extensions?extension_id=<string>&type=<string>&started_at=<string>&ended_at=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"extensions"
									],
									"query": [
										{
											"key": "extension_id",
											"value": "<string>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "started_at",
											"value": "<string>"
										},
										{
											"key": "ended_at",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								},
								"description": "Gets an analytics report for one or more extensions."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/analytics/extensions?extension_id=<string>&type=<string>&started_at=<string>&ended_at=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"analytics",
												"extensions"
											],
											"query": [
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "started_at",
													"value": "<string>"
												},
												{
													"key": "ended_at",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/analytics/extensions?extension_id=<string>&type=<string>&started_at=<string>&ended_at=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"analytics",
												"extensions"
											],
											"query": [
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "started_at",
													"value": "<string>"
												},
												{
													"key": "ended_at",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/analytics/extensions?extension_id=<string>&type=<string>&started_at=<string>&ended_at=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"analytics",
												"extensions"
											],
											"query": [
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "started_at",
													"value": "<string>"
												},
												{
													"key": "ended_at",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/analytics/extensions?extension_id=<string>&type=<string>&started_at=<string>&ended_at=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"analytics",
												"extensions"
											],
											"query": [
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "started_at",
													"value": "<string>"
												},
												{
													"key": "ended_at",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"extension_id\": \"<string>\",\n      \"URL\": \"<string>\",\n      \"type\": \"<string>\",\n      \"date_range\": {\n        \"started_at\": \"<string>\",\n        \"ended_at\": \"<string>\"\n      }\n    },\n    {\n      \"extension_id\": \"<string>\",\n      \"URL\": \"<string>\",\n      \"type\": \"<string>\",\n      \"date_range\": {\n        \"started_at\": \"<string>\",\n        \"ended_at\": \"<string>\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "games",
					"item": [
						{
							"name": "Get Game Analytics",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/games?game_id=<string>&type=<string>&started_at=<string>&ended_at=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"games"
									],
									"query": [
										{
											"key": "game_id",
											"value": "<string>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "started_at",
											"value": "<string>"
										},
										{
											"key": "ended_at",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								},
								"description": "Gets an analytics report for one or more games."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/analytics/games?game_id=<string>&type=<string>&started_at=<string>&ended_at=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"analytics",
												"games"
											],
											"query": [
												{
													"key": "game_id",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "started_at",
													"value": "<string>"
												},
												{
													"key": "ended_at",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"game_id\": \"<string>\",\n      \"URL\": \"<string>\",\n      \"type\": \"<string>\",\n      \"date_range\": {\n        \"started_at\": \"<string>\",\n        \"ended_at\": \"<string>\"\n      }\n    },\n    {\n      \"game_id\": \"<string>\",\n      \"URL\": \"<string>\",\n      \"type\": \"<string>\",\n      \"date_range\": {\n        \"started_at\": \"<string>\",\n        \"ended_at\": \"<string>\"\n      }\n    }\n  ]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/analytics/games?game_id=<string>&type=<string>&started_at=<string>&ended_at=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"analytics",
												"games"
											],
											"query": [
												{
													"key": "game_id",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "started_at",
													"value": "<string>"
												},
												{
													"key": "ended_at",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/analytics/games?game_id=<string>&type=<string>&started_at=<string>&ended_at=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"analytics",
												"games"
											],
											"query": [
												{
													"key": "game_id",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "started_at",
													"value": "<string>"
												},
												{
													"key": "ended_at",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/analytics/games?game_id=<string>&type=<string>&started_at=<string>&ended_at=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"analytics",
												"games"
											],
											"query": [
												{
													"key": "game_id",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "started_at",
													"value": "<string>"
												},
												{
													"key": "ended_at",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "bits",
			"item": [
				{
					"name": "leaderboard",
					"item": [
						{
							"name": "Get Bits Leaderboard",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bits/leaderboard?count=<string>&period=<string>&started_at=<string>&user_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bits",
										"leaderboard"
									],
									"query": [
										{
											"key": "count",
											"value": "<string>"
										},
										{
											"key": "period",
											"value": "<string>"
										},
										{
											"key": "started_at",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the Bits leaderboard for the authenticated broadcaster."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bits/leaderboard?count=<string>&period=<string>&started_at=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bits",
												"leaderboard"
											],
											"query": [
												{
													"key": "count",
													"value": "<string>"
												},
												{
													"key": "period",
													"value": "<string>"
												},
												{
													"key": "started_at",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bits/leaderboard?count=<string>&period=<string>&started_at=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bits",
												"leaderboard"
											],
											"query": [
												{
													"key": "count",
													"value": "<string>"
												},
												{
													"key": "period",
													"value": "<string>"
												},
												{
													"key": "started_at",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bits/leaderboard?count=<string>&period=<string>&started_at=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bits",
												"leaderboard"
											],
											"query": [
												{
													"key": "count",
													"value": "<string>"
												},
												{
													"key": "period",
													"value": "<string>"
												},
												{
													"key": "started_at",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bits/leaderboard?count=<string>&period=<string>&started_at=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bits",
												"leaderboard"
											],
											"query": [
												{
													"key": "count",
													"value": "<string>"
												},
												{
													"key": "period",
													"value": "<string>"
												},
												{
													"key": "started_at",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"rank\": \"<number>\",\n      \"score\": \"<number>\"\n    },\n    {\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"rank\": \"<number>\",\n      \"score\": \"<number>\"\n    }\n  ],\n  \"date_range\": {\n    \"started_at\": \"<string>\",\n    \"ended_at\": \"<string>\"\n  },\n  \"total\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "cheermotes",
					"item": [
						{
							"name": "Get Cheermotes",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bits/cheermotes?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bits",
										"cheermotes"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								},
								"description": "Gets a list of Cheermotes that users can use to cheer Bits."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bits/cheermotes?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bits",
												"cheermotes"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bits/cheermotes?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bits",
												"cheermotes"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bits/cheermotes?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bits",
												"cheermotes"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bits/cheermotes?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bits",
												"cheermotes"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"prefix\": \"<string>\",\n      \"tiers\": [\n        {\n          \"min_bits\": \"<number>\",\n          \"id\": \"<string>\",\n          \"color\": \"<string>\",\n          \"images\": {\n            \"dark\": {\n              \"animated\": {\n                \"1\": \"<string>\",\n                \"2\": \"<string>\",\n                \"3\": \"<string>\",\n                \"4\": \"<string>\",\n                \"1.5\": \"<string>\"\n              },\n              \"static\": {\n                \"1\": \"<string>\",\n                \"2\": \"<string>\",\n                \"3\": \"<string>\",\n                \"4\": \"<string>\",\n                \"1.5\": \"<string>\"\n              }\n            },\n            \"light\": {\n              \"animated\": {\n                \"1\": \"<string>\",\n                \"2\": \"<string>\",\n                \"3\": \"<string>\",\n                \"4\": \"<string>\",\n                \"1.5\": \"<string>\"\n              },\n              \"static\": {\n                \"1\": \"<string>\",\n                \"2\": \"<string>\",\n                \"3\": \"<string>\",\n                \"4\": \"<string>\",\n                \"1.5\": \"<string>\"\n              }\n            }\n          },\n          \"can_cheer\": \"<boolean>\",\n          \"show_in_bits_card\": \"<boolean>\"\n        },\n        {\n          \"min_bits\": \"<number>\",\n          \"id\": \"<string>\",\n          \"color\": \"<string>\",\n          \"images\": {\n            \"dark\": {\n              \"animated\": {\n                \"1\": \"<string>\",\n                \"2\": \"<string>\",\n                \"3\": \"<string>\",\n                \"4\": \"<string>\",\n                \"1.5\": \"<string>\"\n              },\n              \"static\": {\n                \"1\": \"<string>\",\n                \"2\": \"<string>\",\n                \"3\": \"<string>\",\n                \"4\": \"<string>\",\n                \"1.5\": \"<string>\"\n              }\n            },\n            \"light\": {\n              \"animated\": {\n                \"1\": \"<string>\",\n                \"2\": \"<string>\",\n                \"3\": \"<string>\",\n                \"4\": \"<string>\",\n                \"1.5\": \"<string>\"\n              },\n              \"static\": {\n                \"1\": \"<string>\",\n                \"2\": \"<string>\",\n                \"3\": \"<string>\",\n                \"4\": \"<string>\",\n                \"1.5\": \"<string>\"\n              }\n            }\n          },\n          \"can_cheer\": \"<boolean>\",\n          \"show_in_bits_card\": \"<boolean>\"\n        }\n      ],\n      \"type\": \"<string>\",\n      \"order\": \"<number>\",\n      \"last_updated\": \"<string>\",\n      \"is_charitable\": \"<boolean>\"\n    },\n    {\n      \"prefix\": \"<string>\",\n      \"tiers\": [\n        {\n          \"min_bits\": \"<number>\",\n          \"id\": \"<string>\",\n          \"color\": \"<string>\",\n          \"images\": {\n            \"dark\": {\n              \"animated\": {\n                \"1\": \"<string>\",\n                \"2\": \"<string>\",\n                \"3\": \"<string>\",\n                \"4\": \"<string>\",\n                \"1.5\": \"<string>\"\n              },\n              \"static\": {\n                \"1\": \"<string>\",\n                \"2\": \"<string>\",\n                \"3\": \"<string>\",\n                \"4\": \"<string>\",\n                \"1.5\": \"<string>\"\n              }\n            },\n            \"light\": {\n              \"animated\": {\n                \"1\": \"<string>\",\n                \"2\": \"<string>\",\n                \"3\": \"<string>\",\n                \"4\": \"<string>\",\n                \"1.5\": \"<string>\"\n              },\n              \"static\": {\n                \"1\": \"<string>\",\n                \"2\": \"<string>\",\n                \"3\": \"<string>\",\n                \"4\": \"<string>\",\n                \"1.5\": \"<string>\"\n              }\n            }\n          },\n          \"can_cheer\": \"<boolean>\",\n          \"show_in_bits_card\": \"<boolean>\"\n        },\n        {\n          \"min_bits\": \"<number>\",\n          \"id\": \"<string>\",\n          \"color\": \"<string>\",\n          \"images\": {\n            \"dark\": {\n              \"animated\": {\n                \"1\": \"<string>\",\n                \"2\": \"<string>\",\n                \"3\": \"<string>\",\n                \"4\": \"<string>\",\n                \"1.5\": \"<string>\"\n              },\n              \"static\": {\n                \"1\": \"<string>\",\n                \"2\": \"<string>\",\n                \"3\": \"<string>\",\n                \"4\": \"<string>\",\n                \"1.5\": \"<string>\"\n              }\n            },\n            \"light\": {\n              \"animated\": {\n                \"1\": \"<string>\",\n                \"2\": \"<string>\",\n                \"3\": \"<string>\",\n                \"4\": \"<string>\",\n                \"1.5\": \"<string>\"\n              },\n              \"static\": {\n                \"1\": \"<string>\",\n                \"2\": \"<string>\",\n                \"3\": \"<string>\",\n                \"4\": \"<string>\",\n                \"1.5\": \"<string>\"\n              }\n            }\n          },\n          \"can_cheer\": \"<boolean>\",\n          \"show_in_bits_card\": \"<boolean>\"\n        }\n      ],\n      \"type\": \"<string>\",\n      \"order\": \"<number>\",\n      \"last_updated\": \"<string>\",\n      \"is_charitable\": \"<boolean>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "extensions",
					"item": [
						{
							"name": "Get Extension Bits Products",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bits/extensions?should_include_all=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bits",
										"extensions"
									],
									"query": [
										{
											"key": "should_include_all",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the list of Bits products that belongs to the extension."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bits/extensions?should_include_all=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bits",
												"extensions"
											],
											"query": [
												{
													"key": "should_include_all",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"sku\": \"<string>\",\n      \"cost\": {\n        \"amount\": \"<number>\",\n        \"type\": \"<string>\"\n      },\n      \"in_development\": \"<boolean>\",\n      \"display_name\": \"<string>\",\n      \"expiration\": \"<string>\",\n      \"is_broadcast\": \"<boolean>\"\n    },\n    {\n      \"sku\": \"<string>\",\n      \"cost\": {\n        \"amount\": \"<number>\",\n        \"type\": \"<string>\"\n      },\n      \"in_development\": \"<boolean>\",\n      \"display_name\": \"<string>\",\n      \"expiration\": \"<string>\",\n      \"is_broadcast\": \"<boolean>\"\n    }\n  ]\n}"
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bits/extensions?should_include_all=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bits",
												"extensions"
											],
											"query": [
												{
													"key": "should_include_all",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bits/extensions?should_include_all=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bits",
												"extensions"
											],
											"query": [
												{
													"key": "should_include_all",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bits/extensions?should_include_all=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bits",
												"extensions"
											],
											"query": [
												{
													"key": "should_include_all",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Extension Bits Product",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bits/extensions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bits",
										"extensions"
									]
								},
								"description": "Adds or updates a Bits product that the extension created."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bits/extensions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bits",
												"extensions"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bits/extensions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bits",
												"extensions"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bits/extensions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bits",
												"extensions"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bits/extensions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bits",
												"extensions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"sku\": \"<string>\",\n      \"cost\": {\n        \"amount\": \"<number>\",\n        \"type\": \"<string>\"\n      },\n      \"in_development\": \"<boolean>\",\n      \"display_name\": \"<string>\",\n      \"expiration\": \"<string>\",\n      \"is_broadcast\": \"<boolean>\"\n    },\n    {\n      \"sku\": \"<string>\",\n      \"cost\": {\n        \"amount\": \"<number>\",\n        \"type\": \"<string>\"\n      },\n      \"in_development\": \"<boolean>\",\n      \"display_name\": \"<string>\",\n      \"expiration\": \"<string>\",\n      \"is_broadcast\": \"<boolean>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "extensions",
			"item": [
				{
					"name": "transactions",
					"item": [
						{
							"name": "Get Extension Transactions",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions/transactions?extension_id=<string>&id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										"transactions"
									],
									"query": [
										{
											"key": "extension_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								},
								"description": "Gets an extension’s list of transactions."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/transactions?extension_id=<string>&id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"transactions"
											],
											"query": [
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/transactions?extension_id=<string>&id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"transactions"
											],
											"query": [
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"timestamp\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"product_type\": \"<string>\",\n      \"product_data\": {\n        \"domain\": \"<string>\",\n        \"sku\": \"<string>\",\n        \"cost\": {\n          \"amount\": \"<number>\",\n          \"type\": \"<string>\"\n        },\n        \"inDevelopment\": \"<boolean>\",\n        \"displayName\": \"<string>\",\n        \"expiration\": \"<string>\",\n        \"broadcast\": \"<boolean>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"timestamp\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"product_type\": \"<string>\",\n      \"product_data\": {\n        \"domain\": \"<string>\",\n        \"sku\": \"<string>\",\n        \"cost\": {\n          \"amount\": \"<number>\",\n          \"type\": \"<string>\"\n        },\n        \"inDevelopment\": \"<boolean>\",\n        \"displayName\": \"<string>\",\n        \"expiration\": \"<string>\",\n        \"broadcast\": \"<boolean>\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/transactions?extension_id=<string>&id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"transactions"
											],
											"query": [
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/transactions?extension_id=<string>&id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"transactions"
											],
											"query": [
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "configurations",
					"item": [
						{
							"name": "Get Extension Configuration Segment",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions/configurations?broadcaster_id=<string>&extension_id=<string>&segment=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										"configurations"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "extension_id",
											"value": "<string>"
										},
										{
											"key": "segment",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the specified configuration segment from the specified extension."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/configurations?broadcaster_id=<string>&extension_id=<string>&segment=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"configurations"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "segment",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/configurations?broadcaster_id=<string>&extension_id=<string>&segment=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"configurations"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "segment",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/configurations?broadcaster_id=<string>&extension_id=<string>&segment=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"configurations"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "segment",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"segment\": \"<string>\",\n      \"content\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"segment\": \"<string>\",\n      \"content\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/configurations?broadcaster_id=<string>&extension_id=<string>&segment=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"configurations"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "segment",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Extension Configuration Segment",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions/configurations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										"configurations"
									]
								},
								"description": "Updates a configuration segment."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"configurations"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"configurations"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"configurations"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"configurations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "required_configuration",
					"item": [
						{
							"name": "Set Extension Required Configuration",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions/required_configuration?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										"required_configuration"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								},
								"description": "Updates the extension’s required_configuration string."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/required_configuration?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"required_configuration"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/required_configuration?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"required_configuration"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/required_configuration?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"required_configuration"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/required_configuration?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"required_configuration"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "pubsub",
					"item": [
						{
							"name": "Send Extension PubSub Message",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions/pubsub",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										"pubsub"
									]
								},
								"description": "Sends a message to one or more viewers."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/pubsub",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"pubsub"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/pubsub",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"pubsub"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/pubsub",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"pubsub"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/pubsub",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"pubsub"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "live",
					"item": [
						{
							"name": "Get Extension Live Channels",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions/live?extension_id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										"live"
									],
									"query": [
										{
											"key": "extension_id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								},
								"description": "Gets a list of broadcasters that are streaming live and have installed or activated the extension."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/live?extension_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"live"
											],
											"query": [
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/live?extension_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"live"
											],
											"query": [
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"game_name\": \"<string>\",\n      \"game_id\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"game_name\": \"<string>\",\n      \"game_id\": \"<string>\",\n      \"title\": \"<string>\"\n    }\n  ],\n  \"pagination\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/live?extension_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"live"
											],
											"query": [
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/live?extension_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"live"
											],
											"query": [
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "jwt",
					"item": [
						{
							"name": "secrets",
							"item": [
								{
									"name": "Get Extension Secrets",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://id.twitch.tv/oauth2/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/jwt/secrets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"jwt",
												"secrets"
											]
										},
										"description": "Gets an extension’s list of shared secrets."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/jwt/secrets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"jwt",
														"secrets"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"format_version\": \"<number>\",\n      \"secrets\": [\n        {\n          \"content\": \"<string>\",\n          \"active_at\": \"<string>\",\n          \"expires_at\": \"<string>\"\n        },\n        {\n          \"content\": \"<string>\",\n          \"active_at\": \"<string>\",\n          \"expires_at\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"format_version\": \"<number>\",\n      \"secrets\": [\n        {\n          \"content\": \"<string>\",\n          \"active_at\": \"<string>\",\n          \"expires_at\": \"<string>\"\n        },\n        {\n          \"content\": \"<string>\",\n          \"active_at\": \"<string>\",\n          \"expires_at\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Internal Server Error: Something bad happened on our side",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/jwt/secrets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"jwt",
														"secrets"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthenticated: Missing/invalid Token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/jwt/secrets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"jwt",
														"secrets"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/jwt/secrets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"jwt",
														"secrets"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create Extension Secret",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://id.twitch.tv/oauth2/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/jwt/secrets?extension_id=<string>&delay=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"jwt",
												"secrets"
											],
											"query": [
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "delay",
													"value": "<string>"
												}
											]
										},
										"description": "Creates a shared secret used to sign and verify JWT tokens."
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/jwt/secrets?extension_id=<string>&delay=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"jwt",
														"secrets"
													],
													"query": [
														{
															"key": "extension_id",
															"value": "<string>"
														},
														{
															"key": "delay",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error: Something bad happened on our side",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/jwt/secrets?extension_id=<string>&delay=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"jwt",
														"secrets"
													],
													"query": [
														{
															"key": "extension_id",
															"value": "<string>"
														},
														{
															"key": "delay",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthenticated: Missing/invalid Token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/jwt/secrets?extension_id=<string>&delay=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"jwt",
														"secrets"
													],
													"query": [
														{
															"key": "extension_id",
															"value": "<string>"
														},
														{
															"key": "delay",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/jwt/secrets?extension_id=<string>&delay=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"jwt",
														"secrets"
													],
													"query": [
														{
															"key": "extension_id",
															"value": "<string>"
														},
														{
															"key": "delay",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"format_version\": \"<number>\",\n      \"secrets\": [\n        {\n          \"content\": \"<string>\",\n          \"active_at\": \"<string>\",\n          \"expires_at\": \"<string>\"\n        },\n        {\n          \"content\": \"<string>\",\n          \"active_at\": \"<string>\",\n          \"expires_at\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"format_version\": \"<number>\",\n      \"secrets\": [\n        {\n          \"content\": \"<string>\",\n          \"active_at\": \"<string>\",\n          \"expires_at\": \"<string>\"\n        },\n        {\n          \"content\": \"<string>\",\n          \"active_at\": \"<string>\",\n          \"expires_at\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "chat",
					"item": [
						{
							"name": "Send Extension Chat Message",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions/chat?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										"chat"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								},
								"description": "Sends a message to the specified broadcaster’s chat room."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/chat?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"chat"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/chat?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"chat"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/chat?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"chat"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/chat?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"chat"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "released",
					"item": [
						{
							"name": "Get Released Extensions",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions/released?extension_id=<string>&extension_version=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										"released"
									],
									"query": [
										{
											"key": "extension_id",
											"value": "<string>"
										},
										{
											"key": "extension_version",
											"value": "<string>"
										}
									]
								},
								"description": "Gets information about a released extension."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/released?extension_id=<string>&extension_version=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"released"
											],
											"query": [
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "extension_version",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"author_name\": \"<string>\",\n      \"bits_enabled\": \"<boolean>\",\n      \"can_install\": \"<boolean>\",\n      \"configuration_location\": \"<string>\",\n      \"description\": \"<string>\",\n      \"eula_tos_url\": \"<string>\",\n      \"has_chat_support\": \"<boolean>\",\n      \"icon_url\": \"<string>\",\n      \"icon_urls\": {\n        \"100x100\": \"<string>\",\n        \"24x24\": \"<string>\",\n        \"300x200\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"privacy_policy_url\": \"<string>\",\n      \"request_identity_link\": \"<boolean>\",\n      \"screenshot_urls\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"state\": \"<string>\",\n      \"subscriptions_support_level\": \"<string>\",\n      \"summary\": \"<string>\",\n      \"support_email\": \"<string>\",\n      \"version\": \"<string>\",\n      \"viewer_summary\": \"<string>\",\n      \"views\": {\n        \"mobile\": {\n          \"viewer_url\": \"<string>\"\n        },\n        \"panel\": {\n          \"viewer_url\": \"<string>\",\n          \"height\": \"<number>\",\n          \"can_link_external_content\": \"<boolean>\"\n        },\n        \"video_overlay\": {\n          \"viewer_url\": \"<string>\",\n          \"can_link_external_content\": \"<boolean>\"\n        },\n        \"component\": {\n          \"viewer_url\": \"<string>\",\n          \"aspect_width\": \"<number>\",\n          \"aspect_height\": \"<number>\",\n          \"aspect_ratio_x\": \"<number>\",\n          \"aspect_ratio_y\": \"<number>\",\n          \"autoscale\": \"<boolean>\",\n          \"scale_pixels\": \"<number>\",\n          \"target_height\": \"<number>\",\n          \"size\": \"<number>\",\n          \"zoom\": \"<boolean>\",\n          \"zoom_pixels\": \"<number>\",\n          \"can_link_external_content\": \"<boolean>\"\n        }\n      },\n      \"allowlisted_config_urls\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"allowlisted_panel_urls\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"author_name\": \"<string>\",\n      \"bits_enabled\": \"<boolean>\",\n      \"can_install\": \"<boolean>\",\n      \"configuration_location\": \"<string>\",\n      \"description\": \"<string>\",\n      \"eula_tos_url\": \"<string>\",\n      \"has_chat_support\": \"<boolean>\",\n      \"icon_url\": \"<string>\",\n      \"icon_urls\": {\n        \"100x100\": \"<string>\",\n        \"24x24\": \"<string>\",\n        \"300x200\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"privacy_policy_url\": \"<string>\",\n      \"request_identity_link\": \"<boolean>\",\n      \"screenshot_urls\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"state\": \"<string>\",\n      \"subscriptions_support_level\": \"<string>\",\n      \"summary\": \"<string>\",\n      \"support_email\": \"<string>\",\n      \"version\": \"<string>\",\n      \"viewer_summary\": \"<string>\",\n      \"views\": {\n        \"mobile\": {\n          \"viewer_url\": \"<string>\"\n        },\n        \"panel\": {\n          \"viewer_url\": \"<string>\",\n          \"height\": \"<number>\",\n          \"can_link_external_content\": \"<boolean>\"\n        },\n        \"video_overlay\": {\n          \"viewer_url\": \"<string>\",\n          \"can_link_external_content\": \"<boolean>\"\n        },\n        \"component\": {\n          \"viewer_url\": \"<string>\",\n          \"aspect_width\": \"<number>\",\n          \"aspect_height\": \"<number>\",\n          \"aspect_ratio_x\": \"<number>\",\n          \"aspect_ratio_y\": \"<number>\",\n          \"autoscale\": \"<boolean>\",\n          \"scale_pixels\": \"<number>\",\n          \"target_height\": \"<number>\",\n          \"size\": \"<number>\",\n          \"zoom\": \"<boolean>\",\n          \"zoom_pixels\": \"<number>\",\n          \"can_link_external_content\": \"<boolean>\"\n        }\n      },\n      \"allowlisted_config_urls\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"allowlisted_panel_urls\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/released?extension_id=<string>&extension_version=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"released"
											],
											"query": [
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "extension_version",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/released?extension_id=<string>&extension_version=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"released"
											],
											"query": [
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "extension_version",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/released?extension_id=<string>&extension_version=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"released"
											],
											"query": [
												{
													"key": "extension_id",
													"value": "<string>"
												},
												{
													"key": "extension_version",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get Extensions",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/extensions?extension_id=<string>&extension_version=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"extensions"
							],
							"query": [
								{
									"key": "extension_id",
									"value": "<string>"
								},
								{
									"key": "extension_version",
									"value": "<string>"
								}
							]
						},
						"description": "Gets information about an extension."
					},
					"response": [
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions?extension_id=<string>&extension_version=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "extension_id",
											"value": "<string>"
										},
										{
											"key": "extension_version",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions?extension_id=<string>&extension_version=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "extension_id",
											"value": "<string>"
										},
										{
											"key": "extension_version",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions?extension_id=<string>&extension_version=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "extension_id",
											"value": "<string>"
										},
										{
											"key": "extension_version",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"author_name\": \"<string>\",\n      \"bits_enabled\": \"<boolean>\",\n      \"can_install\": \"<boolean>\",\n      \"configuration_location\": \"<string>\",\n      \"description\": \"<string>\",\n      \"eula_tos_url\": \"<string>\",\n      \"has_chat_support\": \"<boolean>\",\n      \"icon_url\": \"<string>\",\n      \"icon_urls\": {\n        \"100x100\": \"<string>\",\n        \"24x24\": \"<string>\",\n        \"300x200\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"privacy_policy_url\": \"<string>\",\n      \"request_identity_link\": \"<boolean>\",\n      \"screenshot_urls\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"state\": \"<string>\",\n      \"subscriptions_support_level\": \"<string>\",\n      \"summary\": \"<string>\",\n      \"support_email\": \"<string>\",\n      \"version\": \"<string>\",\n      \"viewer_summary\": \"<string>\",\n      \"views\": {\n        \"mobile\": {\n          \"viewer_url\": \"<string>\"\n        },\n        \"panel\": {\n          \"viewer_url\": \"<string>\",\n          \"height\": \"<number>\",\n          \"can_link_external_content\": \"<boolean>\"\n        },\n        \"video_overlay\": {\n          \"viewer_url\": \"<string>\",\n          \"can_link_external_content\": \"<boolean>\"\n        },\n        \"component\": {\n          \"viewer_url\": \"<string>\",\n          \"aspect_width\": \"<number>\",\n          \"aspect_height\": \"<number>\",\n          \"aspect_ratio_x\": \"<number>\",\n          \"aspect_ratio_y\": \"<number>\",\n          \"autoscale\": \"<boolean>\",\n          \"scale_pixels\": \"<number>\",\n          \"target_height\": \"<number>\",\n          \"size\": \"<number>\",\n          \"zoom\": \"<boolean>\",\n          \"zoom_pixels\": \"<number>\",\n          \"can_link_external_content\": \"<boolean>\"\n        }\n      },\n      \"allowlisted_config_urls\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"allowlisted_panel_urls\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"author_name\": \"<string>\",\n      \"bits_enabled\": \"<boolean>\",\n      \"can_install\": \"<boolean>\",\n      \"configuration_location\": \"<string>\",\n      \"description\": \"<string>\",\n      \"eula_tos_url\": \"<string>\",\n      \"has_chat_support\": \"<boolean>\",\n      \"icon_url\": \"<string>\",\n      \"icon_urls\": {\n        \"100x100\": \"<string>\",\n        \"24x24\": \"<string>\",\n        \"300x200\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"privacy_policy_url\": \"<string>\",\n      \"request_identity_link\": \"<boolean>\",\n      \"screenshot_urls\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"state\": \"<string>\",\n      \"subscriptions_support_level\": \"<string>\",\n      \"summary\": \"<string>\",\n      \"support_email\": \"<string>\",\n      \"version\": \"<string>\",\n      \"viewer_summary\": \"<string>\",\n      \"views\": {\n        \"mobile\": {\n          \"viewer_url\": \"<string>\"\n        },\n        \"panel\": {\n          \"viewer_url\": \"<string>\",\n          \"height\": \"<number>\",\n          \"can_link_external_content\": \"<boolean>\"\n        },\n        \"video_overlay\": {\n          \"viewer_url\": \"<string>\",\n          \"can_link_external_content\": \"<boolean>\"\n        },\n        \"component\": {\n          \"viewer_url\": \"<string>\",\n          \"aspect_width\": \"<number>\",\n          \"aspect_height\": \"<number>\",\n          \"aspect_ratio_x\": \"<number>\",\n          \"aspect_ratio_y\": \"<number>\",\n          \"autoscale\": \"<boolean>\",\n          \"scale_pixels\": \"<number>\",\n          \"target_height\": \"<number>\",\n          \"size\": \"<number>\",\n          \"zoom\": \"<boolean>\",\n          \"zoom_pixels\": \"<number>\",\n          \"can_link_external_content\": \"<boolean>\"\n        }\n      },\n      \"allowlisted_config_urls\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"allowlisted_panel_urls\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions?extension_id=<string>&extension_version=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "extension_id",
											"value": "<string>"
										},
										{
											"key": "extension_version",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "channel_points",
			"item": [
				{
					"name": "custom_rewards",
					"item": [
						{
							"name": "redemptions",
							"item": [
								{
									"name": "Get Custom Reward Redemption",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://id.twitch.tv/oauth2/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channel_points/custom_rewards/redemptions?broadcaster_id=<string>&reward_id=<string>&status=<string>&id=<string>&sort=<string>&after=<string>&first=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channel_points",
												"custom_rewards",
												"redemptions"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "reward_id",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												},
												{
													"key": "sort",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												}
											]
										},
										"description": "Gets a list of redemptions for a custom reward."
									},
									"response": [
										{
											"name": "Unauthenticated: Missing/invalid Token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/channel_points/custom_rewards/redemptions?broadcaster_id=<string>&reward_id=<string>&status=<string>&id=<string>&sort=<string>&after=<string>&first=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"channel_points",
														"custom_rewards",
														"redemptions"
													],
													"query": [
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "reward_id",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "<string>"
														},
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "<string>"
														},
														{
															"key": "after",
															"value": "<string>"
														},
														{
															"key": "first",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/channel_points/custom_rewards/redemptions?broadcaster_id=<string>&reward_id=<string>&status=<string>&id=<string>&sort=<string>&after=<string>&first=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"channel_points",
														"custom_rewards",
														"redemptions"
													],
													"query": [
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "reward_id",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "<string>"
														},
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "<string>"
														},
														{
															"key": "after",
															"value": "<string>"
														},
														{
															"key": "first",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"user_input\": \"<string>\",\n      \"status\": \"<string>\",\n      \"redeemed_at\": \"<string>\",\n      \"reward\": {\n        \"id\": \"<string>\",\n        \"title\": \"<string>\",\n        \"prompt\": \"<string>\",\n        \"cost\": \"<number>\"\n      }\n    },\n    {\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"user_input\": \"<string>\",\n      \"status\": \"<string>\",\n      \"redeemed_at\": \"<string>\",\n      \"reward\": {\n        \"id\": \"<string>\",\n        \"title\": \"<string>\",\n        \"prompt\": \"<string>\",\n        \"cost\": \"<number>\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/channel_points/custom_rewards/redemptions?broadcaster_id=<string>&reward_id=<string>&status=<string>&id=<string>&sort=<string>&after=<string>&first=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"channel_points",
														"custom_rewards",
														"redemptions"
													],
													"query": [
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "reward_id",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "<string>"
														},
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "<string>"
														},
														{
															"key": "after",
															"value": "<string>"
														},
														{
															"key": "first",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error: Something bad happened on our side",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/channel_points/custom_rewards/redemptions?broadcaster_id=<string>&reward_id=<string>&status=<string>&id=<string>&sort=<string>&after=<string>&first=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"channel_points",
														"custom_rewards",
														"redemptions"
													],
													"query": [
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "reward_id",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "<string>"
														},
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "<string>"
														},
														{
															"key": "after",
															"value": "<string>"
														},
														{
															"key": "first",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update Redemption Status",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://id.twitch.tv/oauth2/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channel_points/custom_rewards/redemptions?id=<string>&broadcaster_id=<string>&reward_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channel_points",
												"custom_rewards",
												"redemptions"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "reward_id",
													"value": "<string>"
												}
											]
										},
										"description": "Updates a redemption’s status."
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/channel_points/custom_rewards/redemptions?id=<string>&broadcaster_id=<string>&reward_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"channel_points",
														"custom_rewards",
														"redemptions"
													],
													"query": [
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "reward_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/channel_points/custom_rewards/redemptions?id=<string>&broadcaster_id=<string>&reward_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"channel_points",
														"custom_rewards",
														"redemptions"
													],
													"query": [
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "reward_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_input\": \"<string>\",\n      \"status\": \"<string>\",\n      \"redeemed_at\": \"<string>\",\n      \"reward\": {\n        \"id\": \"<string>\",\n        \"title\": \"<string>\",\n        \"prompt\": \"<string>\",\n        \"cost\": \"<number>\"\n      }\n    },\n    {\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_input\": \"<string>\",\n      \"status\": \"<string>\",\n      \"redeemed_at\": \"<string>\",\n      \"reward\": {\n        \"id\": \"<string>\",\n        \"title\": \"<string>\",\n        \"prompt\": \"<string>\",\n        \"cost\": \"<number>\"\n      }\n    }\n  ]\n}"
										},
										{
											"name": "Internal Server Error: Something bad happened on our side",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/channel_points/custom_rewards/redemptions?id=<string>&broadcaster_id=<string>&reward_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"channel_points",
														"custom_rewards",
														"redemptions"
													],
													"query": [
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "reward_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthenticated: Missing/invalid Token",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/channel_points/custom_rewards/redemptions?id=<string>&broadcaster_id=<string>&reward_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"channel_points",
														"custom_rewards",
														"redemptions"
													],
													"query": [
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "reward_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Create Custom Rewards",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channel_points",
										"custom_rewards"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								},
								"description": "Creates a Custom Reward in the broadcaster’s channel."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channel_points",
												"custom_rewards"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channel_points",
												"custom_rewards"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channel_points",
												"custom_rewards"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"image\": \"<string>\",\n      \"background_color\": \"<string>\",\n      \"is_enabled\": \"<boolean>\",\n      \"cost\": \"<number>\",\n      \"title\": \"<string>\",\n      \"prompt\": \"<string>\",\n      \"is_user_input_required\": \"<boolean>\",\n      \"max_per_stream_setting\": {\n        \"is_enabled\": \"<boolean>\",\n        \"max_per_stream\": \"<number>\"\n      },\n      \"max_per_user_per_stream_setting\": {\n        \"is_enabled\": \"<boolean>\",\n        \"max_per_user_per_stream\": \"<number>\"\n      },\n      \"global_cooldown_setting\": {\n        \"is_enabled\": \"<boolean>\",\n        \"global_cooldown_seconds\": \"<number>\"\n      },\n      \"is_paused\": \"<boolean>\",\n      \"is_in_stock\": \"<boolean>\",\n      \"default_image\": {\n        \"url_1x\": \"<string>\",\n        \"url_2x\": \"<string>\",\n        \"url_4x\": \"<string>\"\n      },\n      \"should_redemptions_skip_request_queue\": \"<boolean>\",\n      \"redemptions_redeemed_current_stream\": \"<string>\",\n      \"cooldown_expires_at\": \"<string>\"\n    },\n    {\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"image\": \"<string>\",\n      \"background_color\": \"<string>\",\n      \"is_enabled\": \"<boolean>\",\n      \"cost\": \"<number>\",\n      \"title\": \"<string>\",\n      \"prompt\": \"<string>\",\n      \"is_user_input_required\": \"<boolean>\",\n      \"max_per_stream_setting\": {\n        \"is_enabled\": \"<boolean>\",\n        \"max_per_stream\": \"<number>\"\n      },\n      \"max_per_user_per_stream_setting\": {\n        \"is_enabled\": \"<boolean>\",\n        \"max_per_user_per_stream\": \"<number>\"\n      },\n      \"global_cooldown_setting\": {\n        \"is_enabled\": \"<boolean>\",\n        \"global_cooldown_seconds\": \"<number>\"\n      },\n      \"is_paused\": \"<boolean>\",\n      \"is_in_stock\": \"<boolean>\",\n      \"default_image\": {\n        \"url_1x\": \"<string>\",\n        \"url_2x\": \"<string>\",\n        \"url_4x\": \"<string>\"\n      },\n      \"should_redemptions_skip_request_queue\": \"<boolean>\",\n      \"redemptions_redeemed_current_stream\": \"<string>\",\n      \"cooldown_expires_at\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channel_points",
												"custom_rewards"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Custom Reward",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>&id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channel_points",
										"custom_rewards"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										}
									]
								},
								"description": "Deletes a custom reward that the broadcaster created."
							},
							"response": [
								{
									"name": "Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channel_points",
												"custom_rewards"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channel_points",
												"custom_rewards"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channel_points",
												"custom_rewards"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channel_points",
												"custom_rewards"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Custom Reward",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>&id=<string>&only_manageable_rewards=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channel_points",
										"custom_rewards"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "only_manageable_rewards",
											"value": "<string>"
										}
									]
								},
								"description": "Gets a list of custom rewards that the specified broadcaster created."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>&id=<string>&only_manageable_rewards=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channel_points",
												"custom_rewards"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												},
												{
													"key": "only_manageable_rewards",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>&id=<string>&only_manageable_rewards=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channel_points",
												"custom_rewards"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												},
												{
													"key": "only_manageable_rewards",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"image\": \"<string>\",\n      \"background_color\": \"<string>\",\n      \"is_enabled\": \"<boolean>\",\n      \"cost\": \"<number>\",\n      \"title\": \"<string>\",\n      \"prompt\": \"<string>\",\n      \"is_user_input_required\": \"<boolean>\",\n      \"max_per_stream_setting\": {\n        \"is_enabled\": \"<boolean>\",\n        \"max_per_stream\": \"<number>\"\n      },\n      \"max_per_user_per_stream_setting\": {\n        \"is_enabled\": \"<boolean>\",\n        \"max_per_user_per_stream\": \"<number>\"\n      },\n      \"global_cooldown_setting\": {\n        \"is_enabled\": \"<boolean>\",\n        \"global_cooldown_seconds\": \"<number>\"\n      },\n      \"is_paused\": \"<boolean>\",\n      \"is_in_stock\": \"<boolean>\",\n      \"default_image\": {\n        \"url_1x\": \"<string>\",\n        \"url_2x\": \"<string>\",\n        \"url_4x\": \"<string>\"\n      },\n      \"should_redemptions_skip_request_queue\": \"<boolean>\",\n      \"redemptions_redeemed_current_stream\": \"<string>\",\n      \"cooldown_expires_at\": \"<string>\"\n    },\n    {\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"image\": \"<string>\",\n      \"background_color\": \"<string>\",\n      \"is_enabled\": \"<boolean>\",\n      \"cost\": \"<number>\",\n      \"title\": \"<string>\",\n      \"prompt\": \"<string>\",\n      \"is_user_input_required\": \"<boolean>\",\n      \"max_per_stream_setting\": {\n        \"is_enabled\": \"<boolean>\",\n        \"max_per_stream\": \"<number>\"\n      },\n      \"max_per_user_per_stream_setting\": {\n        \"is_enabled\": \"<boolean>\",\n        \"max_per_user_per_stream\": \"<number>\"\n      },\n      \"global_cooldown_setting\": {\n        \"is_enabled\": \"<boolean>\",\n        \"global_cooldown_seconds\": \"<number>\"\n      },\n      \"is_paused\": \"<boolean>\",\n      \"is_in_stock\": \"<boolean>\",\n      \"default_image\": {\n        \"url_1x\": \"<string>\",\n        \"url_2x\": \"<string>\",\n        \"url_4x\": \"<string>\"\n      },\n      \"should_redemptions_skip_request_queue\": \"<boolean>\",\n      \"redemptions_redeemed_current_stream\": \"<string>\",\n      \"cooldown_expires_at\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>&id=<string>&only_manageable_rewards=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channel_points",
												"custom_rewards"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												},
												{
													"key": "only_manageable_rewards",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>&id=<string>&only_manageable_rewards=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channel_points",
												"custom_rewards"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												},
												{
													"key": "only_manageable_rewards",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Custom Reward",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>&id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channel_points",
										"custom_rewards"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										}
									]
								},
								"description": "Updates a custom reward."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channel_points",
												"custom_rewards"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"image\": \"<string>\",\n      \"background_color\": \"<string>\",\n      \"is_enabled\": \"<boolean>\",\n      \"cost\": \"<number>\",\n      \"title\": \"<string>\",\n      \"prompt\": \"<string>\",\n      \"is_user_input_required\": \"<boolean>\",\n      \"max_per_stream_setting\": {\n        \"is_enabled\": \"<boolean>\",\n        \"max_per_stream\": \"<number>\"\n      },\n      \"max_per_user_per_stream_setting\": {\n        \"is_enabled\": \"<boolean>\",\n        \"max_per_user_per_stream\": \"<number>\"\n      },\n      \"global_cooldown_setting\": {\n        \"is_enabled\": \"<boolean>\",\n        \"global_cooldown_seconds\": \"<number>\"\n      },\n      \"is_paused\": \"<boolean>\",\n      \"is_in_stock\": \"<boolean>\",\n      \"default_image\": {\n        \"url_1x\": \"<string>\",\n        \"url_2x\": \"<string>\",\n        \"url_4x\": \"<string>\"\n      },\n      \"should_redemptions_skip_request_queue\": \"<boolean>\",\n      \"redemptions_redeemed_current_stream\": \"<number>\",\n      \"cooldown_expires_at\": \"<string>\"\n    },\n    {\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"image\": \"<string>\",\n      \"background_color\": \"<string>\",\n      \"is_enabled\": \"<boolean>\",\n      \"cost\": \"<number>\",\n      \"title\": \"<string>\",\n      \"prompt\": \"<string>\",\n      \"is_user_input_required\": \"<boolean>\",\n      \"max_per_stream_setting\": {\n        \"is_enabled\": \"<boolean>\",\n        \"max_per_stream\": \"<number>\"\n      },\n      \"max_per_user_per_stream_setting\": {\n        \"is_enabled\": \"<boolean>\",\n        \"max_per_user_per_stream\": \"<number>\"\n      },\n      \"global_cooldown_setting\": {\n        \"is_enabled\": \"<boolean>\",\n        \"global_cooldown_seconds\": \"<number>\"\n      },\n      \"is_paused\": \"<boolean>\",\n      \"is_in_stock\": \"<boolean>\",\n      \"default_image\": {\n        \"url_1x\": \"<string>\",\n        \"url_2x\": \"<string>\",\n        \"url_4x\": \"<string>\"\n      },\n      \"should_redemptions_skip_request_queue\": \"<boolean>\",\n      \"redemptions_redeemed_current_stream\": \"<number>\",\n      \"cooldown_expires_at\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channel_points",
												"custom_rewards"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channel_points",
												"custom_rewards"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/channel_points/custom_rewards?broadcaster_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"channel_points",
												"custom_rewards"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "charity",
			"item": [
				{
					"name": "campaigns",
					"item": [
						{
							"name": "Get Charity Campaign",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/charity/campaigns?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charity",
										"campaigns"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								},
								"description": "Gets information about the broadcaster’s active charity campaign."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/charity/campaigns?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"charity",
												"campaigns"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/charity/campaigns?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"charity",
												"campaigns"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"charity_name\": \"<string>\",\n      \"charity_description\": \"<string>\",\n      \"charity_logo\": \"<string>\",\n      \"charity_website\": \"<string>\",\n      \"current_amount\": {\n        \"value\": \"<number>\",\n        \"decimal_places\": \"<number>\",\n        \"currency\": \"<string>\"\n      },\n      \"target_amount\": {\n        \"value\": \"<number>\",\n        \"decimal_places\": \"<number>\",\n        \"currency\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"charity_name\": \"<string>\",\n      \"charity_description\": \"<string>\",\n      \"charity_logo\": \"<string>\",\n      \"charity_website\": \"<string>\",\n      \"current_amount\": {\n        \"value\": \"<number>\",\n        \"decimal_places\": \"<number>\",\n        \"currency\": \"<string>\"\n      },\n      \"target_amount\": {\n        \"value\": \"<number>\",\n        \"decimal_places\": \"<number>\",\n        \"currency\": \"<string>\"\n      }\n    }\n  ]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/charity/campaigns?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"charity",
												"campaigns"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/charity/campaigns?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"charity",
												"campaigns"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "donations",
					"item": [
						{
							"name": "Get Charity Campaign Donations",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/charity/donations?broadcaster_id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charity",
										"donations"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the list of donations that users have made to the broadcaster’s active charity campaign."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/charity/donations?broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"charity",
												"donations"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/charity/donations?broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"charity",
												"donations"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"campaign_id\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"amount\": {\n        \"value\": \"<number>\",\n        \"decimal_places\": \"<number>\",\n        \"currency\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"campaign_id\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"amount\": {\n        \"value\": \"<number>\",\n        \"decimal_places\": \"<number>\",\n        \"currency\": \"<string>\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/charity/donations?broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"charity",
												"donations"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/charity/donations?broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"charity",
												"donations"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "chat",
			"item": [
				{
					"name": "chatters",
					"item": [
						{
							"name": "Get Chatters",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chat/chatters?broadcaster_id=<string>&moderator_id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chat",
										"chatters"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the list of users that are connected to the broadcaster’s chat session."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/chatters?broadcaster_id=<string>&moderator_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"chatters"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/chatters?broadcaster_id=<string>&moderator_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"chatters"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\"\n    },\n    {\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\"\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  },\n  \"total\": \"<number>\"\n}"
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/chatters?broadcaster_id=<string>&moderator_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"chatters"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/chatters?broadcaster_id=<string>&moderator_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"chatters"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "emotes",
					"item": [
						{
							"name": "global",
							"item": [
								{
									"name": "Get Global Emotes",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://id.twitch.tv/oauth2/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/emotes/global",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"emotes",
												"global"
											]
										},
										"description": "Gets all global emotes."
									},
									"response": [
										{
											"name": "Unauthenticated: Missing/invalid Token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/chat/emotes/global",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"chat",
														"emotes",
														"global"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/chat/emotes/global",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"chat",
														"emotes",
														"global"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error: Something bad happened on our side",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/chat/emotes/global",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"chat",
														"emotes",
														"global"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/chat/emotes/global",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"chat",
														"emotes",
														"global"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"images\": {\n        \"url_1x\": \"<string>\",\n        \"url_2x\": \"<string>\",\n        \"url_4x\": \"<string>\"\n      },\n      \"format\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"scale\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"theme_mode\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"images\": {\n        \"url_1x\": \"<string>\",\n        \"url_2x\": \"<string>\",\n        \"url_4x\": \"<string>\"\n      },\n      \"format\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"scale\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"theme_mode\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"template\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "set",
							"item": [
								{
									"name": "Get Emote Sets",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://id.twitch.tv/oauth2/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/emotes/set?emote_set_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"emotes",
												"set"
											],
											"query": [
												{
													"key": "emote_set_id",
													"value": "<string>"
												}
											]
										},
										"description": "Gets emotes for one or more specified emote sets."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/chat/emotes/set?emote_set_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"chat",
														"emotes",
														"set"
													],
													"query": [
														{
															"key": "emote_set_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"images\": {\n        \"url_1x\": \"<string>\",\n        \"url_2x\": \"<string>\",\n        \"url_4x\": \"<string>\"\n      },\n      \"emote_type\": \"<string>\",\n      \"emote_set_id\": \"<string>\",\n      \"owner_id\": \"<string>\",\n      \"format\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"scale\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"theme_mode\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"images\": {\n        \"url_1x\": \"<string>\",\n        \"url_2x\": \"<string>\",\n        \"url_4x\": \"<string>\"\n      },\n      \"emote_type\": \"<string>\",\n      \"emote_set_id\": \"<string>\",\n      \"owner_id\": \"<string>\",\n      \"format\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"scale\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"theme_mode\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"template\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/chat/emotes/set?emote_set_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"chat",
														"emotes",
														"set"
													],
													"query": [
														{
															"key": "emote_set_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthenticated: Missing/invalid Token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/chat/emotes/set?emote_set_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"chat",
														"emotes",
														"set"
													],
													"query": [
														{
															"key": "emote_set_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error: Something bad happened on our side",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/chat/emotes/set?emote_set_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"chat",
														"emotes",
														"set"
													],
													"query": [
														{
															"key": "emote_set_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "user",
							"item": [
								{
									"name": "Get User Emotes",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://id.twitch.tv/oauth2/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/emotes/user?user_id=<string>&broadcaster_id=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"emotes",
												"user"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										},
										"description": "BETA Retrieves emotes available to the user across all channels."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/chat/emotes/user?user_id=<string>&broadcaster_id=<string>&after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"chat",
														"emotes",
														"user"
													],
													"query": [
														{
															"key": "user_id",
															"value": "<string>"
														},
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "after",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"emote_set_id\": \"<string>\",\n      \"emote_type\": \"<string>\",\n      \"format\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner_id\": \"<string>\",\n      \"scale\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"theme_mode\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"emote_set_id\": \"<string>\",\n      \"emote_type\": \"<string>\",\n      \"format\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"owner_id\": \"<string>\",\n      \"scale\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"theme_mode\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"template\": \"<string>\",\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Internal Server Error: Something bad happened on our side",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/chat/emotes/user?user_id=<string>&broadcaster_id=<string>&after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"chat",
														"emotes",
														"user"
													],
													"query": [
														{
															"key": "user_id",
															"value": "<string>"
														},
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "after",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/chat/emotes/user?user_id=<string>&broadcaster_id=<string>&after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"chat",
														"emotes",
														"user"
													],
													"query": [
														{
															"key": "user_id",
															"value": "<string>"
														},
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "after",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthenticated: Missing/invalid Token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/chat/emotes/user?user_id=<string>&broadcaster_id=<string>&after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"chat",
														"emotes",
														"user"
													],
													"query": [
														{
															"key": "user_id",
															"value": "<string>"
														},
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "after",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get Channel Emotes",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chat/emotes?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chat",
										"emotes"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the broadcaster’s list of custom emotes."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/emotes?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"emotes"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/emotes?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"emotes"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"images\": {\n        \"url_1x\": \"<string>\",\n        \"url_2x\": \"<string>\",\n        \"url_4x\": \"<string>\"\n      },\n      \"tier\": \"<string>\",\n      \"emote_type\": \"<string>\",\n      \"emote_set_id\": \"<string>\",\n      \"format\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"scale\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"theme_mode\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"images\": {\n        \"url_1x\": \"<string>\",\n        \"url_2x\": \"<string>\",\n        \"url_4x\": \"<string>\"\n      },\n      \"tier\": \"<string>\",\n      \"emote_type\": \"<string>\",\n      \"emote_set_id\": \"<string>\",\n      \"format\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"scale\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"theme_mode\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"template\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/emotes?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"emotes"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/emotes?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"emotes"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "badges",
					"item": [
						{
							"name": "global",
							"item": [
								{
									"name": "Get Global Chat Badges",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://id.twitch.tv/oauth2/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/badges/global",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"badges",
												"global"
											]
										},
										"description": "Gets Twitch’s list of chat badges."
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/chat/badges/global",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"chat",
														"badges",
														"global"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/chat/badges/global",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"chat",
														"badges",
														"global"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"set_id\": \"<string>\",\n      \"versions\": [\n        {\n          \"id\": \"<string>\",\n          \"image_url_1x\": \"<string>\",\n          \"image_url_2x\": \"<string>\",\n          \"image_url_4x\": \"<string>\",\n          \"title\": \"<string>\",\n          \"description\": \"<string>\",\n          \"click_action\": \"<string>\",\n          \"click_url\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"image_url_1x\": \"<string>\",\n          \"image_url_2x\": \"<string>\",\n          \"image_url_4x\": \"<string>\",\n          \"title\": \"<string>\",\n          \"description\": \"<string>\",\n          \"click_action\": \"<string>\",\n          \"click_url\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"set_id\": \"<string>\",\n      \"versions\": [\n        {\n          \"id\": \"<string>\",\n          \"image_url_1x\": \"<string>\",\n          \"image_url_2x\": \"<string>\",\n          \"image_url_4x\": \"<string>\",\n          \"title\": \"<string>\",\n          \"description\": \"<string>\",\n          \"click_action\": \"<string>\",\n          \"click_url\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"image_url_1x\": \"<string>\",\n          \"image_url_2x\": \"<string>\",\n          \"image_url_4x\": \"<string>\",\n          \"title\": \"<string>\",\n          \"description\": \"<string>\",\n          \"click_action\": \"<string>\",\n          \"click_url\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthenticated: Missing/invalid Token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/chat/badges/global",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"chat",
														"badges",
														"global"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error: Something bad happened on our side",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/chat/badges/global",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"chat",
														"badges",
														"global"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get Channel Chat Badges",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chat/badges?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chat",
										"badges"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the broadcaster’s list of custom chat badges."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/badges?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"badges"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/badges?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"badges"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/badges?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"badges"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/badges?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"badges"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"set_id\": \"<string>\",\n      \"versions\": [\n        {\n          \"id\": \"<string>\",\n          \"image_url_1x\": \"<string>\",\n          \"image_url_2x\": \"<string>\",\n          \"image_url_4x\": \"<string>\",\n          \"title\": \"<string>\",\n          \"description\": \"<string>\",\n          \"click_action\": \"<string>\",\n          \"click_url\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"image_url_1x\": \"<string>\",\n          \"image_url_2x\": \"<string>\",\n          \"image_url_4x\": \"<string>\",\n          \"title\": \"<string>\",\n          \"description\": \"<string>\",\n          \"click_action\": \"<string>\",\n          \"click_url\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"set_id\": \"<string>\",\n      \"versions\": [\n        {\n          \"id\": \"<string>\",\n          \"image_url_1x\": \"<string>\",\n          \"image_url_2x\": \"<string>\",\n          \"image_url_4x\": \"<string>\",\n          \"title\": \"<string>\",\n          \"description\": \"<string>\",\n          \"click_action\": \"<string>\",\n          \"click_url\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"image_url_1x\": \"<string>\",\n          \"image_url_2x\": \"<string>\",\n          \"image_url_4x\": \"<string>\",\n          \"title\": \"<string>\",\n          \"description\": \"<string>\",\n          \"click_action\": \"<string>\",\n          \"click_url\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "settings",
					"item": [
						{
							"name": "Get Chat Settings",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chat/settings?broadcaster_id=<string>&moderator_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chat",
										"settings"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the broadcaster’s chat settings."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/settings?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/settings?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"slow_mode\": \"<boolean>\",\n      \"slow_mode_wait_time\": \"<string>\",\n      \"follower_mode\": \"<boolean>\",\n      \"follower_mode_duration\": \"<number>\",\n      \"subscriber_mode\": \"<boolean>\",\n      \"emote_mode\": \"<boolean>\",\n      \"unique_chat_mode\": \"<boolean>\",\n      \"non_moderator_chat_delay\": \"<boolean>\",\n      \"non_moderator_chat_delay_duration\": \"<number>\"\n    },\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"slow_mode\": \"<boolean>\",\n      \"slow_mode_wait_time\": \"<string>\",\n      \"follower_mode\": \"<boolean>\",\n      \"follower_mode_duration\": \"<number>\",\n      \"subscriber_mode\": \"<boolean>\",\n      \"emote_mode\": \"<boolean>\",\n      \"unique_chat_mode\": \"<boolean>\",\n      \"non_moderator_chat_delay\": \"<boolean>\",\n      \"non_moderator_chat_delay_duration\": \"<number>\"\n    }\n  ]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/settings?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/settings?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Chat Settings",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chat/settings?broadcaster_id=<string>&moderator_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chat",
										"settings"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										}
									]
								},
								"description": "Updates the broadcaster’s chat settings."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/settings?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/settings?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/settings?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"moderator_id\": \"<string>\",\n      \"slow_mode\": \"<boolean>\",\n      \"slow_mode_wait_time\": \"<number>\",\n      \"follower_mode\": \"<boolean>\",\n      \"follower_mode_duration\": \"<string>\",\n      \"subscriber_mode\": \"<boolean>\",\n      \"emote_mode\": \"<boolean>\",\n      \"unique_chat_mode\": \"<boolean>\",\n      \"non_moderator_chat_delay\": \"<boolean>\",\n      \"non_moderator_chat_delay_duration\": \"<string>\"\n    },\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"moderator_id\": \"<string>\",\n      \"slow_mode\": \"<boolean>\",\n      \"slow_mode_wait_time\": \"<number>\",\n      \"follower_mode\": \"<boolean>\",\n      \"follower_mode_duration\": \"<string>\",\n      \"subscriber_mode\": \"<boolean>\",\n      \"emote_mode\": \"<boolean>\",\n      \"unique_chat_mode\": \"<boolean>\",\n      \"non_moderator_chat_delay\": \"<boolean>\",\n      \"non_moderator_chat_delay_duration\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/settings?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "announcements",
					"item": [
						{
							"name": "Send Chat Announcement",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chat/announcements?broadcaster_id=<string>&moderator_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chat",
										"announcements"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										}
									]
								},
								"description": "Sends an announcement to the broadcaster’s chat room."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/announcements?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"announcements"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/announcements?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"announcements"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/announcements?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"announcements"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/announcements?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"announcements"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "shoutouts",
					"item": [
						{
							"name": "Send a Shoutout",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chat/shoutouts?from_broadcaster_id=<string>&to_broadcaster_id=<string>&moderator_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chat",
										"shoutouts"
									],
									"query": [
										{
											"key": "from_broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "to_broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										}
									]
								},
								"description": "Sends a Shoutout to the specified broadcaster."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/shoutouts?from_broadcaster_id=<string>&to_broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"shoutouts"
											],
											"query": [
												{
													"key": "from_broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "to_broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/shoutouts?from_broadcaster_id=<string>&to_broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"shoutouts"
											],
											"query": [
												{
													"key": "from_broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "to_broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/shoutouts?from_broadcaster_id=<string>&to_broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"shoutouts"
											],
											"query": [
												{
													"key": "from_broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "to_broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/shoutouts?from_broadcaster_id=<string>&to_broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"shoutouts"
											],
											"query": [
												{
													"key": "from_broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "to_broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "messages",
					"item": [
						{
							"name": "Send Chat Message",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chat/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chat",
										"messages"
									]
								},
								"description": "NEW Sends a message to the broadcaster’s chat room."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"messages"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"message_id\": \"<string>\",\n      \"is_sent\": \"<boolean>\"\n    },\n    {\n      \"message_id\": \"<string>\",\n      \"is_sent\": \"<boolean>\"\n    }\n  ]\n}"
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"messages"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"messages"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "color",
					"item": [
						{
							"name": "Get User Chat Color",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chat/color?user_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chat",
										"color"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the color used for the user’s name in chat."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/color?user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"color"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/color?user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"color"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"user_id\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"user_id\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/color?user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"color"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/color?user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"color"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update User Chat Color",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chat/color?user_id=<string>&color=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chat",
										"color"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "color",
											"value": "<string>"
										}
									]
								},
								"description": "Updates the color used for the user’s name in chat."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/color?user_id=<string>&color=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"color"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "color",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/color?user_id=<string>&color=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"color"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "color",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/color?user_id=<string>&color=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"color"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "color",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chat/color?user_id=<string>&color=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chat",
												"color"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "color",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "clips",
			"item": [
				{
					"name": "Create Clip",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/clips?broadcaster_id=<string>&has_delay=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clips"
							],
							"query": [
								{
									"key": "broadcaster_id",
									"value": "<string>"
								},
								{
									"key": "has_delay",
									"value": "<string>"
								}
							]
						},
						"description": "Creates a clip from the broadcaster’s stream."
					},
					"response": [
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clips?broadcaster_id=<string>&has_delay=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clips"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "has_delay",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clips?broadcaster_id=<string>&has_delay=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clips"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "has_delay",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clips?broadcaster_id=<string>&has_delay=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clips"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "has_delay",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"edit_url\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"edit_url\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clips?broadcaster_id=<string>&has_delay=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clips"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "has_delay",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Clips",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/clips?broadcaster_id=<string>&game_id=<string>&id=<string>&started_at=<string>&ended_at=<string>&first=<string>&before=<string>&after=<string>&is_featured=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clips"
							],
							"query": [
								{
									"key": "broadcaster_id",
									"value": "<string>"
								},
								{
									"key": "game_id",
									"value": "<string>"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "started_at",
									"value": "<string>"
								},
								{
									"key": "ended_at",
									"value": "<string>"
								},
								{
									"key": "first",
									"value": "<string>"
								},
								{
									"key": "before",
									"value": "<string>"
								},
								{
									"key": "after",
									"value": "<string>"
								},
								{
									"key": "is_featured",
									"value": "<string>"
								}
							]
						},
						"description": "Gets one or more video clips."
					},
					"response": [
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clips?broadcaster_id=<string>&game_id=<string>&id=<string>&started_at=<string>&ended_at=<string>&first=<string>&before=<string>&after=<string>&is_featured=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clips"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "game_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "started_at",
											"value": "<string>"
										},
										{
											"key": "ended_at",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "is_featured",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clips?broadcaster_id=<string>&game_id=<string>&id=<string>&started_at=<string>&ended_at=<string>&first=<string>&before=<string>&after=<string>&is_featured=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clips"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "game_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "started_at",
											"value": "<string>"
										},
										{
											"key": "ended_at",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "is_featured",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clips?broadcaster_id=<string>&game_id=<string>&id=<string>&started_at=<string>&ended_at=<string>&first=<string>&before=<string>&after=<string>&is_featured=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clips"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "game_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "started_at",
											"value": "<string>"
										},
										{
											"key": "ended_at",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "is_featured",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clips?broadcaster_id=<string>&game_id=<string>&id=<string>&started_at=<string>&ended_at=<string>&first=<string>&before=<string>&after=<string>&is_featured=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clips"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "game_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "started_at",
											"value": "<string>"
										},
										{
											"key": "ended_at",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "is_featured",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"url\": \"<string>\",\n      \"embed_url\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"creator_id\": \"<string>\",\n      \"creator_name\": \"<string>\",\n      \"video_id\": \"<string>\",\n      \"game_id\": \"<string>\",\n      \"language\": \"<string>\",\n      \"title\": \"<string>\",\n      \"view_count\": \"<number>\",\n      \"created_at\": \"<string>\",\n      \"thumbnail_url\": \"<string>\",\n      \"duration\": \"<number>\",\n      \"vod_offset\": \"<number>\",\n      \"is_featured\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"url\": \"<string>\",\n      \"embed_url\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"creator_id\": \"<string>\",\n      \"creator_name\": \"<string>\",\n      \"video_id\": \"<string>\",\n      \"game_id\": \"<string>\",\n      \"language\": \"<string>\",\n      \"title\": \"<string>\",\n      \"view_count\": \"<number>\",\n      \"created_at\": \"<string>\",\n      \"thumbnail_url\": \"<string>\",\n      \"duration\": \"<number>\",\n      \"vod_offset\": \"<number>\",\n      \"is_featured\": \"<boolean>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "eventsub",
			"item": [
				{
					"name": "conduits",
					"item": [
						{
							"name": "shards",
							"item": [
								{
									"name": "Get Conduit Shards",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://id.twitch.tv/oauth2/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/conduits/shards?conduit_id=<string>&status=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"conduits",
												"shards"
											],
											"query": [
												{
													"key": "conduit_id",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										},
										"description": "NEW Gets a lists of all shards for a conduit."
									},
									"response": [
										{
											"name": "Internal Server Error: Something bad happened on our side",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/eventsub/conduits/shards?conduit_id=<string>&status=<string>&after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"eventsub",
														"conduits",
														"shards"
													],
													"query": [
														{
															"key": "conduit_id",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "<string>"
														},
														{
															"key": "after",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthenticated: Missing/invalid Token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/eventsub/conduits/shards?conduit_id=<string>&status=<string>&after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"eventsub",
														"conduits",
														"shards"
													],
													"query": [
														{
															"key": "conduit_id",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "<string>"
														},
														{
															"key": "after",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/eventsub/conduits/shards?conduit_id=<string>&status=<string>&after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"eventsub",
														"conduits",
														"shards"
													],
													"query": [
														{
															"key": "conduit_id",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "<string>"
														},
														{
															"key": "after",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/eventsub/conduits/shards?conduit_id=<string>&status=<string>&after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"eventsub",
														"conduits",
														"shards"
													],
													"query": [
														{
															"key": "conduit_id",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "<string>"
														},
														{
															"key": "after",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update Conduit Shards",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://id.twitch.tv/oauth2/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/conduits/shards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"conduits",
												"shards"
											]
										},
										"description": "NEW Updates shard(s) for a conduit."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/eventsub/conduits/shards",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"eventsub",
														"conduits",
														"shards"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"status\": \"<string>\",\n      \"transport\": {\n        \"method\": \"<string>\",\n        \"callback\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"status\": \"<string>\",\n      \"transport\": {\n        \"method\": \"<string>\",\n        \"callback\": \"<string>\"\n      }\n    }\n  ],\n  \"errors\": [\n    {\n      \"id\": \"<string>\",\n      \"message\": \"<string>\",\n      \"code\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"message\": \"<string>\",\n      \"code\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Internal Server Error: Something bad happened on our side",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/eventsub/conduits/shards",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"eventsub",
														"conduits",
														"shards"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthenticated: Missing/invalid Token",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/eventsub/conduits/shards",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"eventsub",
														"conduits",
														"shards"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/eventsub/conduits/shards",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"eventsub",
														"conduits",
														"shards"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get Conduits",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/eventsub/conduits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"eventsub",
										"conduits"
									]
								},
								"description": "NEW Gets the conduits for a client ID."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/conduits",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"conduits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"shard_count\": \"<number>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"shard_count\": \"<number>\"\n    }\n  ]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/conduits",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"conduits"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/conduits",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"conduits"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/conduits",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"conduits"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create Conduits",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/eventsub/conduits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"eventsub",
										"conduits"
									]
								},
								"description": "NEW Creates a new conduit."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/conduits",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"conduits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"shard_count\": \"<number>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"shard_count\": \"<number>\"\n    }\n  ]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/conduits",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"conduits"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/conduits",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"conduits"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/conduits",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"conduits"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Conduits",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/eventsub/conduits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"eventsub",
										"conduits"
									]
								},
								"description": "NEW Updates a conduit’s shard count."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/conduits",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"conduits"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/conduits",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"conduits"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/conduits",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"conduits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"shard_count\": \"<number>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"shard_count\": \"<number>\"\n    }\n  ]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/conduits",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"conduits"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Conduit",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/eventsub/conduits?id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"eventsub",
										"conduits"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>"
										}
									]
								},
								"description": "NEW Deletes a specified conduit."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/conduits?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"conduits"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/conduits?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"conduits"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/conduits?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"conduits"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/conduits?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"conduits"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "subscriptions",
					"item": [
						{
							"name": "Create EventSub Subscription",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/eventsub/subscriptions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"eventsub",
										"subscriptions"
									]
								},
								"description": "Creates an EventSub subscription."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"subscriptions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"version\": \"<string>\",\n      \"condition\": {\n        \"user_id\": \"<string>\"\n      },\n      \"created_at\": \"<string>\",\n      \"transport\": {\n        \"method\": \"<string>\",\n        \"callback\": \"<string>\"\n      },\n      \"cost\": \"<number>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"version\": \"<string>\",\n      \"condition\": {\n        \"user_id\": \"<string>\"\n      },\n      \"created_at\": \"<string>\",\n      \"transport\": {\n        \"method\": \"<string>\",\n        \"callback\": \"<string>\"\n      },\n      \"cost\": \"<number>\"\n    }\n  ],\n  \"total\": \"<number>\",\n  \"total_cost\": \"<number>\",\n  \"max_total_cost\": \"<number>\"\n}"
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"subscriptions"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"subscriptions"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"subscriptions"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete EventSub Subscription",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/eventsub/subscriptions?id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"eventsub",
										"subscriptions"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>"
										}
									]
								},
								"description": "Deletes an EventSub subscription."
							},
							"response": [
								{
									"name": "Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/subscriptions?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"subscriptions"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/subscriptions?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"subscriptions"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/subscriptions?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"subscriptions"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/subscriptions?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"subscriptions"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get EventSub Subscriptions",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/eventsub/subscriptions?status=<string>&type=<string>&user_id=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"eventsub",
										"subscriptions"
									],
									"query": [
										{
											"key": "status",
											"value": "<string>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								},
								"description": "Gets a list of EventSub subscriptions that the client in the access token created."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/subscriptions?status=<string>&type=<string>&user_id=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"subscriptions"
											],
											"query": [
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/subscriptions?status=<string>&type=<string>&user_id=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"subscriptions"
											],
											"query": [
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"total\": \"<number>\",\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"version\": \"<string>\",\n      \"condition\": {\n        \"broadcaster_user_id\": \"<string>\"\n      },\n      \"created_at\": \"<string>\",\n      \"transport\": {\n        \"method\": \"<string>\",\n        \"callback\": \"<string>\"\n      },\n      \"cost\": \"<number>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"version\": \"<string>\",\n      \"condition\": {\n        \"broadcaster_user_id\": \"<string>\"\n      },\n      \"created_at\": \"<string>\",\n      \"transport\": {\n        \"method\": \"<string>\",\n        \"callback\": \"<string>\"\n      },\n      \"cost\": \"<number>\"\n    }\n  ],\n  \"total_cost\": \"<number>\",\n  \"max_total_cost\": \"<number>\",\n  \"pagination\": {}\n}"
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/subscriptions?status=<string>&type=<string>&user_id=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"subscriptions"
											],
											"query": [
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/eventsub/subscriptions?status=<string>&type=<string>&user_id=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"eventsub",
												"subscriptions"
											],
											"query": [
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "content_classification_labels",
			"item": [
				{
					"name": "Get Content Classification Labels",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/content_classification_labels?locale=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content_classification_labels"
							],
							"query": [
								{
									"key": "locale",
									"value": "<string>"
								}
							]
						},
						"description": "Gets information about Twitch content classification labels."
					},
					"response": [
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/content_classification_labels?locale=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content_classification_labels"
									],
									"query": [
										{
											"key": "locale",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/content_classification_labels?locale=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content_classification_labels"
									],
									"query": [
										{
											"key": "locale",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/content_classification_labels?locale=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content_classification_labels"
									],
									"query": [
										{
											"key": "locale",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/content_classification_labels?locale=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content_classification_labels"
									],
									"query": [
										{
											"key": "locale",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "entitlements",
			"item": [
				{
					"name": "drops",
					"item": [
						{
							"name": "Get Drops Entitlements",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entitlements/drops?id=<string>&user_id=<string>&game_id=<string>&fulfillment_status=<string>&after=<string>&first=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entitlements",
										"drops"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "game_id",
											"value": "<string>"
										},
										{
											"key": "fulfillment_status",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										}
									]
								},
								"description": "Gets an organization’s list of entitlements that have been granted to a game, a user, or both."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/drops?id=<string>&user_id=<string>&game_id=<string>&fulfillment_status=<string>&after=<string>&first=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"drops"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "game_id",
													"value": "<string>"
												},
												{
													"key": "fulfillment_status",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/drops?id=<string>&user_id=<string>&game_id=<string>&fulfillment_status=<string>&after=<string>&first=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"drops"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "game_id",
													"value": "<string>"
												},
												{
													"key": "fulfillment_status",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/drops?id=<string>&user_id=<string>&game_id=<string>&fulfillment_status=<string>&after=<string>&first=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"drops"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "game_id",
													"value": "<string>"
												},
												{
													"key": "fulfillment_status",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"benefit_id\": \"<string>\",\n      \"timestamp\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"game_id\": \"<string>\",\n      \"fulfillment_status\": \"<string>\",\n      \"last_updated\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"benefit_id\": \"<string>\",\n      \"timestamp\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"game_id\": \"<string>\",\n      \"fulfillment_status\": \"<string>\",\n      \"last_updated\": \"<string>\"\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/drops?id=<string>&user_id=<string>&game_id=<string>&fulfillment_status=<string>&after=<string>&first=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"drops"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "game_id",
													"value": "<string>"
												},
												{
													"key": "fulfillment_status",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Drops Entitlements",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entitlements/drops",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entitlements",
										"drops"
									]
								},
								"description": "Updates the Drop entitlement’s fulfillment status."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/drops",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"drops"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/drops",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"drops"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"status\": \"<string>\",\n      \"ids\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"status\": \"<string>\",\n      \"ids\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/drops",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"drops"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/drops",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"drops"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "games",
			"item": [
				{
					"name": "top",
					"item": [
						{
							"name": "Get Top Games",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/games/top?first=<string>&after=<string>&before=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games",
										"top"
									],
									"query": [
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										}
									]
								},
								"description": "Gets information about all broadcasts on Twitch."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/games/top?first=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												"top"
											],
											"query": [
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/games/top?first=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												"top"
											],
											"query": [
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"box_art_url\": \"<string>\",\n      \"igdb_id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"box_art_url\": \"<string>\",\n      \"igdb_id\": \"<string>\"\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/games/top?first=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												"top"
											],
											"query": [
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/games/top?first=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												"top"
											],
											"query": [
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get Games",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/games?id=<string>&name=<string>&igdb_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"games"
							],
							"query": [
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "name",
									"value": "<string>"
								},
								{
									"key": "igdb_id",
									"value": "<string>"
								}
							]
						},
						"description": "Gets information about specified games."
					},
					"response": [
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/games?id=<string>&name=<string>&igdb_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "igdb_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/games?id=<string>&name=<string>&igdb_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "igdb_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/games?id=<string>&name=<string>&igdb_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "igdb_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"box_art_url\": \"<string>\",\n      \"igdb_id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"box_art_url\": \"<string>\",\n      \"igdb_id\": \"<string>\"\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/games?id=<string>&name=<string>&igdb_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "igdb_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "goals",
			"item": [
				{
					"name": "Get Creator Goals",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/goals?broadcaster_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"goals"
							],
							"query": [
								{
									"key": "broadcaster_id",
									"value": "<string>"
								}
							]
						},
						"description": "Gets the broadcaster’s list of active goals."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/goals?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"goals"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"current_amount\": \"<number>\",\n      \"target_amount\": \"<number>\",\n      \"created_at\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"current_amount\": \"<number>\",\n      \"target_amount\": \"<number>\",\n      \"created_at\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/goals?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"goals"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/goals?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"goals"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/goals?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"goals"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "guest_star",
			"item": [
				{
					"name": "channel_settings",
					"item": [
						{
							"name": "Get Channel Guest Star Settings",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/guest_star/channel_settings?broadcaster_id=<string>&moderator_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"guest_star",
										"channel_settings"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										}
									]
								},
								"description": "BETA Gets the channel settings for configuration of the Guest Star feature for a particular host."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/channel_settings?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"channel_settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/channel_settings?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"channel_settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/channel_settings?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"channel_settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"is_moderator_send_live_enabled\": \"<boolean>\",\n      \"slot_count\": \"<number>\",\n      \"is_browser_source_audio_enabled\": \"<boolean>\",\n      \"layout\": \"<string>\",\n      \"browser_source_token\": \"<string>\"\n    },\n    {\n      \"is_moderator_send_live_enabled\": \"<boolean>\",\n      \"slot_count\": \"<number>\",\n      \"is_browser_source_audio_enabled\": \"<boolean>\",\n      \"layout\": \"<string>\",\n      \"browser_source_token\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/channel_settings?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"channel_settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Channel Guest Star Settings",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/guest_star/channel_settings?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"guest_star",
										"channel_settings"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								},
								"description": "BETA Mutates the channel settings for configuration of the Guest Star feature for a particular host."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/channel_settings?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"channel_settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/channel_settings?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"channel_settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/channel_settings?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"channel_settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/channel_settings?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"channel_settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "session",
					"item": [
						{
							"name": "Get Guest Star Session",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/guest_star/session?broadcaster_id=<string>&moderator_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"guest_star",
										"session"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										}
									]
								},
								"description": "BETA Gets information about an ongoing Guest Star session for a particular channel."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/session?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"session"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/session?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"session"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/session?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"session"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/session?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"session"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create Guest Star Session",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/guest_star/session?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"guest_star",
										"session"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								},
								"description": "BETA Programmatically creates a Guest Star session on behalf of the broadcaster."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/session?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"session"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/session?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"session"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/session?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"session"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/session?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"session"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "End Guest Star Session",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/guest_star/session?broadcaster_id=<string>&session_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"guest_star",
										"session"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "session_id",
											"value": "<string>"
										}
									]
								},
								"description": "BETA Programmatically ends a Guest Star session on behalf of the broadcaster."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/session?broadcaster_id=<string>&session_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"session"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/session?broadcaster_id=<string>&session_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"session"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/session?broadcaster_id=<string>&session_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"session"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/session?broadcaster_id=<string>&session_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"session"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "invites",
					"item": [
						{
							"name": "Get Guest Star Invites",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/guest_star/invites?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"guest_star",
										"invites"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										},
										{
											"key": "session_id",
											"value": "<string>"
										}
									]
								},
								"description": "BETA Provides the caller with a list of pending invites to a Guest Star session."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/invites?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"invites"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"user_id\": \"<string>\",\n      \"invited_at\": \"<string>\",\n      \"status\": \"<string>\",\n      \"is_audio_enabled\": \"<boolean>\",\n      \"is_video_enabled\": \"<boolean>\",\n      \"is_audio_available\": \"<boolean>\",\n      \"is_video_available\": \"<boolean>\"\n    },\n    {\n      \"user_id\": \"<string>\",\n      \"invited_at\": \"<string>\",\n      \"status\": \"<string>\",\n      \"is_audio_enabled\": \"<boolean>\",\n      \"is_video_enabled\": \"<boolean>\",\n      \"is_audio_available\": \"<boolean>\",\n      \"is_video_available\": \"<boolean>\"\n    }\n  ]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/invites?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"invites"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/invites?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"invites"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/invites?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"invites"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Send Guest Star Invite",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/guest_star/invites?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"guest_star",
										"invites"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										},
										{
											"key": "session_id",
											"value": "<string>"
										},
										{
											"key": "guest_id",
											"value": "<string>"
										}
									]
								},
								"description": "BETA Sends an invite to a specified guest on behalf of the broadcaster for a Guest Star session in progress."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/invites?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"invites"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "guest_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/invites?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"invites"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "guest_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/invites?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"invites"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "guest_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/invites?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"invites"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "guest_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Guest Star Invite",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/guest_star/invites?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"guest_star",
										"invites"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										},
										{
											"key": "session_id",
											"value": "<string>"
										},
										{
											"key": "guest_id",
											"value": "<string>"
										}
									]
								},
								"description": "BETA Revokes a previously sent invite for a Guest Star session."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/invites?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"invites"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "guest_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/invites?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"invites"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "guest_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/invites?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"invites"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "guest_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/invites?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"invites"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "guest_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "slot",
					"item": [
						{
							"name": "Assign Guest Star Slot",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/guest_star/slot?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>&slot_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"guest_star",
										"slot"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										},
										{
											"key": "session_id",
											"value": "<string>"
										},
										{
											"key": "guest_id",
											"value": "<string>"
										},
										{
											"key": "slot_id",
											"value": "<string>"
										}
									]
								},
								"description": "BETA Allows a previously invited user to be assigned a slot within the active Guest Star session."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/slot?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>&slot_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"slot"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "guest_id",
													"value": "<string>"
												},
												{
													"key": "slot_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/slot?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>&slot_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"slot"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "guest_id",
													"value": "<string>"
												},
												{
													"key": "slot_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/slot?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>&slot_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"slot"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "guest_id",
													"value": "<string>"
												},
												{
													"key": "slot_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"code\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/slot?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>&slot_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"slot"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "guest_id",
													"value": "<string>"
												},
												{
													"key": "slot_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Guest Star Slot",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/guest_star/slot?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&source_slot_id=<string>&destination_slot_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"guest_star",
										"slot"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										},
										{
											"key": "session_id",
											"value": "<string>"
										},
										{
											"key": "source_slot_id",
											"value": "<string>"
										},
										{
											"key": "destination_slot_id",
											"value": "<string>"
										}
									]
								},
								"description": "BETA Allows a user to update the assigned slot for a particular user within the active Guest Star session."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/slot?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&source_slot_id=<string>&destination_slot_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"slot"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "source_slot_id",
													"value": "<string>"
												},
												{
													"key": "destination_slot_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/slot?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&source_slot_id=<string>&destination_slot_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"slot"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "source_slot_id",
													"value": "<string>"
												},
												{
													"key": "destination_slot_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/slot?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&source_slot_id=<string>&destination_slot_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"slot"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "source_slot_id",
													"value": "<string>"
												},
												{
													"key": "destination_slot_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/slot?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&source_slot_id=<string>&destination_slot_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"slot"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "source_slot_id",
													"value": "<string>"
												},
												{
													"key": "destination_slot_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Guest Star Slot",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/guest_star/slot?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>&slot_id=<string>&should_reinvite_guest=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"guest_star",
										"slot"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										},
										{
											"key": "session_id",
											"value": "<string>"
										},
										{
											"key": "guest_id",
											"value": "<string>"
										},
										{
											"key": "slot_id",
											"value": "<string>"
										},
										{
											"key": "should_reinvite_guest",
											"value": "<string>"
										}
									]
								},
								"description": "BETA Allows a caller to remove a slot assignment from a user participating in an active Guest Star session."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/slot?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>&slot_id=<string>&should_reinvite_guest=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"slot"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "guest_id",
													"value": "<string>"
												},
												{
													"key": "slot_id",
													"value": "<string>"
												},
												{
													"key": "should_reinvite_guest",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/slot?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>&slot_id=<string>&should_reinvite_guest=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"slot"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "guest_id",
													"value": "<string>"
												},
												{
													"key": "slot_id",
													"value": "<string>"
												},
												{
													"key": "should_reinvite_guest",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/slot?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>&slot_id=<string>&should_reinvite_guest=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"slot"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "guest_id",
													"value": "<string>"
												},
												{
													"key": "slot_id",
													"value": "<string>"
												},
												{
													"key": "should_reinvite_guest",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/slot?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&guest_id=<string>&slot_id=<string>&should_reinvite_guest=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"slot"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "guest_id",
													"value": "<string>"
												},
												{
													"key": "slot_id",
													"value": "<string>"
												},
												{
													"key": "should_reinvite_guest",
													"value": "<string>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "slot_settings",
					"item": [
						{
							"name": "Update Guest Star Slot Settings",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/guest_star/slot_settings?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&slot_id=<string>&is_audio_enabled=<string>&is_video_enabled=<string>&is_live=<string>&volume=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"guest_star",
										"slot_settings"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										},
										{
											"key": "session_id",
											"value": "<string>"
										},
										{
											"key": "slot_id",
											"value": "<string>"
										},
										{
											"key": "is_audio_enabled",
											"value": "<string>"
										},
										{
											"key": "is_video_enabled",
											"value": "<string>"
										},
										{
											"key": "is_live",
											"value": "<string>"
										},
										{
											"key": "volume",
											"value": "<string>"
										}
									]
								},
								"description": "BETA Allows a user to update slot settings for a particular guest within a Guest Star session."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/slot_settings?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&slot_id=<string>&is_audio_enabled=<string>&is_video_enabled=<string>&is_live=<string>&volume=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"slot_settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "slot_id",
													"value": "<string>"
												},
												{
													"key": "is_audio_enabled",
													"value": "<string>"
												},
												{
													"key": "is_video_enabled",
													"value": "<string>"
												},
												{
													"key": "is_live",
													"value": "<string>"
												},
												{
													"key": "volume",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/slot_settings?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&slot_id=<string>&is_audio_enabled=<string>&is_video_enabled=<string>&is_live=<string>&volume=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"slot_settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "slot_id",
													"value": "<string>"
												},
												{
													"key": "is_audio_enabled",
													"value": "<string>"
												},
												{
													"key": "is_video_enabled",
													"value": "<string>"
												},
												{
													"key": "is_live",
													"value": "<string>"
												},
												{
													"key": "volume",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/slot_settings?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&slot_id=<string>&is_audio_enabled=<string>&is_video_enabled=<string>&is_live=<string>&volume=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"slot_settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "slot_id",
													"value": "<string>"
												},
												{
													"key": "is_audio_enabled",
													"value": "<string>"
												},
												{
													"key": "is_video_enabled",
													"value": "<string>"
												},
												{
													"key": "is_live",
													"value": "<string>"
												},
												{
													"key": "volume",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/guest_star/slot_settings?broadcaster_id=<string>&moderator_id=<string>&session_id=<string>&slot_id=<string>&is_audio_enabled=<string>&is_video_enabled=<string>&is_live=<string>&volume=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"guest_star",
												"slot_settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "session_id",
													"value": "<string>"
												},
												{
													"key": "slot_id",
													"value": "<string>"
												},
												{
													"key": "is_audio_enabled",
													"value": "<string>"
												},
												{
													"key": "is_video_enabled",
													"value": "<string>"
												},
												{
													"key": "is_live",
													"value": "<string>"
												},
												{
													"key": "volume",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "hypetrain",
			"item": [
				{
					"name": "events",
					"item": [
						{
							"name": "Get Hype Train Events",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hypetrain/events?broadcaster_id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hypetrain",
										"events"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								},
								"description": "Gets information about the broadcaster’s current or most recent Hype Train event."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/hypetrain/events?broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hypetrain",
												"events"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/hypetrain/events?broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hypetrain",
												"events"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/hypetrain/events?broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hypetrain",
												"events"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/hypetrain/events?broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hypetrain",
												"events"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"event_type\": \"<string>\",\n      \"event_timestamp\": \"<string>\",\n      \"version\": \"<string>\",\n      \"event_data\": {\n        \"broadcaster_id\": \"<string>\",\n        \"cooldown_end_time\": \"<string>\",\n        \"expires_at\": \"<string>\",\n        \"goal\": \"<number>\",\n        \"id\": \"<string>\",\n        \"last_contribution\": {\n          \"total\": \"<number>\",\n          \"type\": \"<string>\",\n          \"user\": \"<string>\"\n        },\n        \"level\": \"<number>\",\n        \"started_at\": \"<string>\",\n        \"top_contributions\": [\n          {\n            \"total\": \"<number>\",\n            \"type\": \"<string>\",\n            \"user\": \"<string>\"\n          },\n          {\n            \"total\": \"<number>\",\n            \"type\": \"<string>\",\n            \"user\": \"<string>\"\n          }\n        ],\n        \"total\": \"<number>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"event_type\": \"<string>\",\n      \"event_timestamp\": \"<string>\",\n      \"version\": \"<string>\",\n      \"event_data\": {\n        \"broadcaster_id\": \"<string>\",\n        \"cooldown_end_time\": \"<string>\",\n        \"expires_at\": \"<string>\",\n        \"goal\": \"<number>\",\n        \"id\": \"<string>\",\n        \"last_contribution\": {\n          \"total\": \"<number>\",\n          \"type\": \"<string>\",\n          \"user\": \"<string>\"\n        },\n        \"level\": \"<number>\",\n        \"started_at\": \"<string>\",\n        \"top_contributions\": [\n          {\n            \"total\": \"<number>\",\n            \"type\": \"<string>\",\n            \"user\": \"<string>\"\n          },\n          {\n            \"total\": \"<number>\",\n            \"type\": \"<string>\",\n            \"user\": \"<string>\"\n          }\n        ],\n        \"total\": \"<number>\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "moderation",
			"item": [
				{
					"name": "enforcements",
					"item": [
						{
							"name": "status",
							"item": [
								{
									"name": "Check AutoMod Status",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://id.twitch.tv/oauth2/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/enforcements/status?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"enforcements",
												"status"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										},
										"description": "Checks whether AutoMod would flag the specified message for review."
									},
									"response": [
										{
											"name": "Unauthenticated: Missing/invalid Token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/moderation/enforcements/status?broadcaster_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"moderation",
														"enforcements",
														"status"
													],
													"query": [
														{
															"key": "broadcaster_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/moderation/enforcements/status?broadcaster_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"moderation",
														"enforcements",
														"status"
													],
													"query": [
														{
															"key": "broadcaster_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error: Something bad happened on our side",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/moderation/enforcements/status?broadcaster_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"moderation",
														"enforcements",
														"status"
													],
													"query": [
														{
															"key": "broadcaster_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/moderation/enforcements/status?broadcaster_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"moderation",
														"enforcements",
														"status"
													],
													"query": [
														{
															"key": "broadcaster_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"msg_id\": \"<string>\",\n      \"is_permitted\": \"<boolean>\"\n    },\n    {\n      \"msg_id\": \"<string>\",\n      \"is_permitted\": \"<boolean>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "automod",
					"item": [
						{
							"name": "message",
							"item": [
								{
									"name": "Manage Held AutoMod Messages",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://id.twitch.tv/oauth2/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/automod/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"automod",
												"message"
											]
										},
										"description": "Allow or deny the message that AutoMod flagged for review."
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/moderation/automod/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"moderation",
														"automod",
														"message"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthenticated: Missing/invalid Token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/moderation/automod/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"moderation",
														"automod",
														"message"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/moderation/automod/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"moderation",
														"automod",
														"message"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error: Something bad happened on our side",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/moderation/automod/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"moderation",
														"automod",
														"message"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "settings",
							"item": [
								{
									"name": "Get AutoMod Settings",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://id.twitch.tv/oauth2/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/automod/settings?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"automod",
												"settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										},
										"description": "Gets the broadcaster’s AutoMod settings."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/moderation/automod/settings?broadcaster_id=<string>&moderator_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"moderation",
														"automod",
														"settings"
													],
													"query": [
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "moderator_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"moderator_id\": \"<string>\",\n      \"overall_level\": \"<string>\",\n      \"disability\": \"<number>\",\n      \"aggression\": \"<number>\",\n      \"sexuality_sex_or_gender\": \"<number>\",\n      \"misogyny\": \"<number>\",\n      \"bullying\": \"<number>\",\n      \"swearing\": \"<number>\",\n      \"race_ethnicity_or_religion\": \"<number>\",\n      \"sex_based_terms\": \"<number>\"\n    },\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"moderator_id\": \"<string>\",\n      \"overall_level\": \"<string>\",\n      \"disability\": \"<number>\",\n      \"aggression\": \"<number>\",\n      \"sexuality_sex_or_gender\": \"<number>\",\n      \"misogyny\": \"<number>\",\n      \"bullying\": \"<number>\",\n      \"swearing\": \"<number>\",\n      \"race_ethnicity_or_religion\": \"<number>\",\n      \"sex_based_terms\": \"<number>\"\n    }\n  ]\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/moderation/automod/settings?broadcaster_id=<string>&moderator_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"moderation",
														"automod",
														"settings"
													],
													"query": [
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "moderator_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthenticated: Missing/invalid Token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/moderation/automod/settings?broadcaster_id=<string>&moderator_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"moderation",
														"automod",
														"settings"
													],
													"query": [
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "moderator_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error: Something bad happened on our side",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/moderation/automod/settings?broadcaster_id=<string>&moderator_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"moderation",
														"automod",
														"settings"
													],
													"query": [
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "moderator_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update AutoMod Settings",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://id.twitch.tv/oauth2/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/automod/settings?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"automod",
												"settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										},
										"description": "Updates the broadcaster’s AutoMod settings."
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/moderation/automod/settings?broadcaster_id=<string>&moderator_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"moderation",
														"automod",
														"settings"
													],
													"query": [
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "moderator_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error: Something bad happened on our side",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/moderation/automod/settings?broadcaster_id=<string>&moderator_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"moderation",
														"automod",
														"settings"
													],
													"query": [
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "moderator_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/moderation/automod/settings?broadcaster_id=<string>&moderator_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"moderation",
														"automod",
														"settings"
													],
													"query": [
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "moderator_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"moderator_id\": \"<string>\",\n      \"overall_level\": \"<number>\",\n      \"disability\": \"<number>\",\n      \"aggression\": \"<number>\",\n      \"sexuality_sex_or_gender\": \"<number>\",\n      \"misogyny\": \"<number>\",\n      \"bullying\": \"<number>\",\n      \"swearing\": \"<number>\",\n      \"race_ethnicity_or_religion\": \"<number>\",\n      \"sex_based_terms\": \"<number>\"\n    },\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"moderator_id\": \"<string>\",\n      \"overall_level\": \"<number>\",\n      \"disability\": \"<number>\",\n      \"aggression\": \"<number>\",\n      \"sexuality_sex_or_gender\": \"<number>\",\n      \"misogyny\": \"<number>\",\n      \"bullying\": \"<number>\",\n      \"swearing\": \"<number>\",\n      \"race_ethnicity_or_religion\": \"<number>\",\n      \"sex_based_terms\": \"<number>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthenticated: Missing/invalid Token",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/moderation/automod/settings?broadcaster_id=<string>&moderator_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"moderation",
														"automod",
														"settings"
													],
													"query": [
														{
															"key": "broadcaster_id",
															"value": "<string>"
														},
														{
															"key": "moderator_id",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "banned",
					"item": [
						{
							"name": "Get Banned Users",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/moderation/banned?broadcaster_id=<string>&user_id=<string>&first=<string>&after=<string>&before=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"moderation",
										"banned"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										}
									]
								},
								"description": "Gets all users that the broadcaster banned or put in a timeout."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/banned?broadcaster_id=<string>&user_id=<string>&first=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"banned"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/banned?broadcaster_id=<string>&user_id=<string>&first=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"banned"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/banned?broadcaster_id=<string>&user_id=<string>&first=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"banned"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"expires_at\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"reason\": \"<string>\",\n      \"moderator_id\": \"<string>\",\n      \"moderator_login\": \"<string>\",\n      \"moderator_name\": \"<string>\"\n    },\n    {\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"expires_at\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"reason\": \"<string>\",\n      \"moderator_id\": \"<string>\",\n      \"moderator_login\": \"<string>\",\n      \"moderator_name\": \"<string>\"\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/banned?broadcaster_id=<string>&user_id=<string>&first=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"banned"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "bans",
					"item": [
						{
							"name": "Ban User",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/moderation/bans?broadcaster_id=<string>&moderator_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"moderation",
										"bans"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										}
									]
								},
								"description": "Bans a user from participating in a broadcaster’s chat room or puts them in a timeout."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/bans?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"bans"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/bans?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"bans"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"moderator_id\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"end_time\": \"<string>\"\n    },\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"moderator_id\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"end_time\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/bans?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"bans"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/bans?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"bans"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Unban User",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/moderation/bans?broadcaster_id=<string>&moderator_id=<string>&user_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"moderation",
										"bans"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<string>"
										}
									]
								},
								"description": "Removes the ban or timeout that was placed on the specified user."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/bans?broadcaster_id=<string>&moderator_id=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"bans"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/bans?broadcaster_id=<string>&moderator_id=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"bans"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/bans?broadcaster_id=<string>&moderator_id=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"bans"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/bans?broadcaster_id=<string>&moderator_id=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"bans"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "unban_requests",
					"item": [
						{
							"name": "Get Unban Requests",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/moderation/unban_requests?broadcaster_id=<string>&moderator_id=<string>&status=<string>&user_id=<string>&after=<string>&first=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"moderation",
										"unban_requests"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										}
									]
								},
								"description": "BETA Gets a list of unban requests for a broadcaster’s channel."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/unban_requests?broadcaster_id=<string>&moderator_id=<string>&status=<string>&user_id=<string>&after=<string>&first=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"unban_requests"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/unban_requests?broadcaster_id=<string>&moderator_id=<string>&status=<string>&user_id=<string>&after=<string>&first=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"unban_requests"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/unban_requests?broadcaster_id=<string>&moderator_id=<string>&status=<string>&user_id=<string>&after=<string>&first=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"unban_requests"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"moderator_id\": \"<string>\",\n      \"moderator_login\": \"<string>\",\n      \"moderator_name\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"text\": \"<string>\",\n      \"status\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"resolved_at\": \"<string>\",\n      \"resolution_text\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"moderator_id\": \"<string>\",\n      \"moderator_login\": \"<string>\",\n      \"moderator_name\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"text\": \"<string>\",\n      \"status\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"resolved_at\": \"<string>\",\n      \"resolution_text\": \"<string>\"\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/unban_requests?broadcaster_id=<string>&moderator_id=<string>&status=<string>&user_id=<string>&after=<string>&first=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"unban_requests"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Resolve Unban Requests",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/moderation/unban_requests?broadcaster_id=<string>&moderator_id=<string>&unban_request_id=<string>&status=<string>&resolution_text=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"moderation",
										"unban_requests"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										},
										{
											"key": "unban_request_id",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "<string>"
										},
										{
											"key": "resolution_text",
											"value": "<string>"
										}
									]
								},
								"description": "BETA Resolves an unban request by approving or denying it."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/unban_requests?broadcaster_id=<string>&moderator_id=<string>&unban_request_id=<string>&status=<string>&resolution_text=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"unban_requests"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "unban_request_id",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "resolution_text",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/unban_requests?broadcaster_id=<string>&moderator_id=<string>&unban_request_id=<string>&status=<string>&resolution_text=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"unban_requests"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "unban_request_id",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "resolution_text",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/unban_requests?broadcaster_id=<string>&moderator_id=<string>&unban_request_id=<string>&status=<string>&resolution_text=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"unban_requests"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "unban_request_id",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "resolution_text",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"moderator_id\": \"<string>\",\n      \"moderator_login\": \"<string>\",\n      \"moderator_name\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"text\": \"<string>\",\n      \"status\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"resolved_at\": \"<string>\",\n      \"resolution_text\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"moderator_id\": \"<string>\",\n      \"moderator_login\": \"<string>\",\n      \"moderator_name\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"text\": \"<string>\",\n      \"status\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"resolved_at\": \"<string>\",\n      \"resolution_text\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/unban_requests?broadcaster_id=<string>&moderator_id=<string>&unban_request_id=<string>&status=<string>&resolution_text=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"unban_requests"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "unban_request_id",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "resolution_text",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "blocked_terms",
					"item": [
						{
							"name": "Get Blocked Terms",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/moderation/blocked_terms?broadcaster_id=<string>&moderator_id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"moderation",
										"blocked_terms"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the broadcaster’s list of non-private, blocked words or phrases."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/blocked_terms?broadcaster_id=<string>&moderator_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"blocked_terms"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/blocked_terms?broadcaster_id=<string>&moderator_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"blocked_terms"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/blocked_terms?broadcaster_id=<string>&moderator_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"blocked_terms"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"moderator_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"text\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"expires_at\": \"<string>\"\n    },\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"moderator_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"text\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"expires_at\": \"<string>\"\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/blocked_terms?broadcaster_id=<string>&moderator_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"blocked_terms"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add Blocked Term",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/moderation/blocked_terms?broadcaster_id=<string>&moderator_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"moderation",
										"blocked_terms"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										}
									]
								},
								"description": "Adds a word or phrase to the broadcaster’s list of blocked terms."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/blocked_terms?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"blocked_terms"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"moderator_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"text\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"expires_at\": \"<string>\"\n    },\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"moderator_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"text\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"expires_at\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/blocked_terms?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"blocked_terms"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/blocked_terms?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"blocked_terms"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/blocked_terms?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"blocked_terms"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove Blocked Term",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/moderation/blocked_terms?broadcaster_id=<string>&moderator_id=<string>&id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"moderation",
										"blocked_terms"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										}
									]
								},
								"description": "Removes the word or phrase from the broadcaster’s list of blocked terms."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/blocked_terms?broadcaster_id=<string>&moderator_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"blocked_terms"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/blocked_terms?broadcaster_id=<string>&moderator_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"blocked_terms"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/blocked_terms?broadcaster_id=<string>&moderator_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"blocked_terms"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/blocked_terms?broadcaster_id=<string>&moderator_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"blocked_terms"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "chat",
					"item": [
						{
							"name": "Delete Chat Messages",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/moderation/chat?broadcaster_id=<string>&moderator_id=<string>&message_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"moderation",
										"chat"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										},
										{
											"key": "message_id",
											"value": "<string>"
										}
									]
								},
								"description": "Removes a single chat message or all chat messages from the broadcaster’s chat room."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/chat?broadcaster_id=<string>&moderator_id=<string>&message_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"chat"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "message_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/chat?broadcaster_id=<string>&moderator_id=<string>&message_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"chat"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "message_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/chat?broadcaster_id=<string>&moderator_id=<string>&message_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"chat"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "message_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/chat?broadcaster_id=<string>&moderator_id=<string>&message_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"chat"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												},
												{
													"key": "message_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "channels",
					"item": [
						{
							"name": "Get Moderated Channels",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/moderation/channels?user_id=<string>&after=<string>&first=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"moderation",
										"channels"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										}
									]
								},
								"description": "Gets a list of channels that the specified user has moderator privileges in."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/channels?user_id=<string>&after=<string>&first=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"channels"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/channels?user_id=<string>&after=<string>&first=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"channels"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/channels?user_id=<string>&after=<string>&first=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"channels"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_name\": \"<string>\"\n    },\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_name\": \"<string>\"\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/channels?user_id=<string>&after=<string>&first=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"channels"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "moderators",
					"item": [
						{
							"name": "Get Moderators",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/moderation/moderators?broadcaster_id=<string>&user_id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"moderation",
										"moderators"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								},
								"description": "Gets all users allowed to moderate the broadcaster’s chat room."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/moderators?broadcaster_id=<string>&user_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"moderators"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\"\n    },\n    {\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\"\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/moderators?broadcaster_id=<string>&user_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"moderators"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/moderators?broadcaster_id=<string>&user_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"moderators"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/moderators?broadcaster_id=<string>&user_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"moderators"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add Channel Moderator",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/moderation/moderators?broadcaster_id=<string>&user_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"moderation",
										"moderators"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<string>"
										}
									]
								},
								"description": "Adds a moderator to the broadcaster’s chat room."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/moderators?broadcaster_id=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"moderators"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/moderators?broadcaster_id=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"moderators"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/moderators?broadcaster_id=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"moderators"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/moderators?broadcaster_id=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"moderators"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove Channel Moderator",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/moderation/moderators?broadcaster_id=<string>&user_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"moderation",
										"moderators"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<string>"
										}
									]
								},
								"description": "Removes a moderator from the broadcaster’s chat room."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/moderators?broadcaster_id=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"moderators"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/moderators?broadcaster_id=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"moderators"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/moderators?broadcaster_id=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"moderators"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/moderators?broadcaster_id=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"moderators"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "shield_mode",
					"item": [
						{
							"name": "Update Shield Mode Status",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/moderation/shield_mode?broadcaster_id=<string>&moderator_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"moderation",
										"shield_mode"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										}
									]
								},
								"description": "Activates or deactivates the broadcaster’s Shield Mode."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/shield_mode?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"shield_mode"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/shield_mode?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"shield_mode"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"is_active\": \"<boolean>\",\n      \"moderator_id\": \"<string>\",\n      \"moderator_name\": \"<string>\",\n      \"moderator_login\": \"<string>\",\n      \"last_activated_at\": \"<string>\"\n    },\n    {\n      \"is_active\": \"<boolean>\",\n      \"moderator_id\": \"<string>\",\n      \"moderator_name\": \"<string>\",\n      \"moderator_login\": \"<string>\",\n      \"last_activated_at\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/shield_mode?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"shield_mode"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/shield_mode?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"shield_mode"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Shield Mode Status",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/moderation/shield_mode?broadcaster_id=<string>&moderator_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"moderation",
										"shield_mode"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "moderator_id",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the broadcaster’s Shield Mode activation status."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/shield_mode?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"shield_mode"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/shield_mode?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"shield_mode"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"is_active\": \"<boolean>\",\n      \"moderator_id\": \"<string>\",\n      \"moderator_name\": \"<string>\",\n      \"moderator_login\": \"<string>\",\n      \"last_activated_at\": \"<string>\"\n    },\n    {\n      \"is_active\": \"<boolean>\",\n      \"moderator_id\": \"<string>\",\n      \"moderator_name\": \"<string>\",\n      \"moderator_login\": \"<string>\",\n      \"last_activated_at\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/shield_mode?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"shield_mode"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/moderation/shield_mode?broadcaster_id=<string>&moderator_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"moderation",
												"shield_mode"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "moderator_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "polls",
			"item": [
				{
					"name": "Get Polls",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/polls?broadcaster_id=<string>&id=<string>&first=<string>&after=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"polls"
							],
							"query": [
								{
									"key": "broadcaster_id",
									"value": "<string>"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "first",
									"value": "<string>"
								},
								{
									"key": "after",
									"value": "<string>"
								}
							]
						},
						"description": "Gets a list of polls that the broadcaster created."
					},
					"response": [
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/polls?broadcaster_id=<string>&id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polls"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/polls?broadcaster_id=<string>&id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polls"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/polls?broadcaster_id=<string>&id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polls"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"title\": \"<string>\",\n      \"choices\": [\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"votes\": \"<number>\",\n          \"channel_points_votes\": \"<number>\",\n          \"bits_votes\": \"<number>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"votes\": \"<number>\",\n          \"channel_points_votes\": \"<number>\",\n          \"bits_votes\": \"<number>\"\n        }\n      ],\n      \"bits_voting_enabled\": \"<boolean>\",\n      \"bits_per_vote\": \"<number>\",\n      \"channel_points_voting_enabled\": \"<boolean>\",\n      \"channel_points_per_vote\": \"<number>\",\n      \"status\": \"<string>\",\n      \"duration\": \"<number>\",\n      \"started_at\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"title\": \"<string>\",\n      \"choices\": [\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"votes\": \"<number>\",\n          \"channel_points_votes\": \"<number>\",\n          \"bits_votes\": \"<number>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"votes\": \"<number>\",\n          \"channel_points_votes\": \"<number>\",\n          \"bits_votes\": \"<number>\"\n        }\n      ],\n      \"bits_voting_enabled\": \"<boolean>\",\n      \"bits_per_vote\": \"<number>\",\n      \"channel_points_voting_enabled\": \"<boolean>\",\n      \"channel_points_per_vote\": \"<number>\",\n      \"status\": \"<string>\",\n      \"duration\": \"<number>\",\n      \"started_at\": \"<string>\"\n    }\n  ],\n  \"pagination\": {}\n}"
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/polls?broadcaster_id=<string>&id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polls"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Poll",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/polls",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"polls"
							]
						},
						"description": "Creates a poll that viewers in the broadcaster’s channel can vote on."
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/polls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polls"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/polls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polls"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"title\": \"<string>\",\n      \"choices\": [\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"votes\": \"<number>\",\n          \"channel_points_votes\": \"<number>\",\n          \"bits_votes\": \"<number>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"votes\": \"<number>\",\n          \"channel_points_votes\": \"<number>\",\n          \"bits_votes\": \"<number>\"\n        }\n      ],\n      \"bits_voting_enabled\": \"<boolean>\",\n      \"bits_per_vote\": \"<number>\",\n      \"channel_points_voting_enabled\": \"<boolean>\",\n      \"channel_points_per_vote\": \"<number>\",\n      \"status\": \"<string>\",\n      \"duration\": \"<number>\",\n      \"started_at\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"title\": \"<string>\",\n      \"choices\": [\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"votes\": \"<number>\",\n          \"channel_points_votes\": \"<number>\",\n          \"bits_votes\": \"<number>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"votes\": \"<number>\",\n          \"channel_points_votes\": \"<number>\",\n          \"bits_votes\": \"<number>\"\n        }\n      ],\n      \"bits_voting_enabled\": \"<boolean>\",\n      \"bits_per_vote\": \"<number>\",\n      \"channel_points_voting_enabled\": \"<boolean>\",\n      \"channel_points_per_vote\": \"<number>\",\n      \"status\": \"<string>\",\n      \"duration\": \"<number>\",\n      \"started_at\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/polls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polls"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/polls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polls"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "End Poll",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/polls",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"polls"
							]
						},
						"description": "End an active poll."
					},
					"response": [
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/polls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polls"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/polls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polls"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/polls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polls"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/polls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polls"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"title\": \"<string>\",\n      \"choices\": [\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"votes\": \"<number>\",\n          \"channel_points_votes\": \"<number>\",\n          \"bits_votes\": \"<number>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"votes\": \"<number>\",\n          \"channel_points_votes\": \"<number>\",\n          \"bits_votes\": \"<number>\"\n        }\n      ],\n      \"bits_voting_enabled\": \"<boolean>\",\n      \"bits_per_vote\": \"<number>\",\n      \"channel_points_voting_enabled\": \"<boolean>\",\n      \"channel_points_per_vote\": \"<number>\",\n      \"status\": \"<string>\",\n      \"duration\": \"<number>\",\n      \"started_at\": \"<string>\",\n      \"ended_at\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"title\": \"<string>\",\n      \"choices\": [\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"votes\": \"<number>\",\n          \"channel_points_votes\": \"<number>\",\n          \"bits_votes\": \"<number>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"votes\": \"<number>\",\n          \"channel_points_votes\": \"<number>\",\n          \"bits_votes\": \"<number>\"\n        }\n      ],\n      \"bits_voting_enabled\": \"<boolean>\",\n      \"bits_per_vote\": \"<number>\",\n      \"channel_points_voting_enabled\": \"<boolean>\",\n      \"channel_points_per_vote\": \"<number>\",\n      \"status\": \"<string>\",\n      \"duration\": \"<number>\",\n      \"started_at\": \"<string>\",\n      \"ended_at\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "predictions",
			"item": [
				{
					"name": "Get Predictions",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/predictions?broadcaster_id=<string>&id=<string>&first=<string>&after=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"predictions"
							],
							"query": [
								{
									"key": "broadcaster_id",
									"value": "<string>"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "first",
									"value": "<string>"
								},
								{
									"key": "after",
									"value": "<string>"
								}
							]
						},
						"description": "Gets a list of Channel Points Predictions that the broadcaster created."
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/predictions?broadcaster_id=<string>&id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"predictions"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/predictions?broadcaster_id=<string>&id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"predictions"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/predictions?broadcaster_id=<string>&id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"predictions"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/predictions?broadcaster_id=<string>&id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"predictions"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"title\": \"<string>\",\n      \"winning_outcome_id\": \"<string>\",\n      \"outcomes\": [\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"users\": \"<number>\",\n          \"channel_points\": \"<number>\",\n          \"top_predictors\": \"<string>\",\n          \"color\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"users\": \"<number>\",\n          \"channel_points\": \"<number>\",\n          \"top_predictors\": \"<string>\",\n          \"color\": \"<string>\"\n        }\n      ],\n      \"prediction_window\": \"<number>\",\n      \"status\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"ended_at\": \"<string>\",\n      \"locked_at\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"title\": \"<string>\",\n      \"winning_outcome_id\": \"<string>\",\n      \"outcomes\": [\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"users\": \"<number>\",\n          \"channel_points\": \"<number>\",\n          \"top_predictors\": \"<string>\",\n          \"color\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"users\": \"<number>\",\n          \"channel_points\": \"<number>\",\n          \"top_predictors\": \"<string>\",\n          \"color\": \"<string>\"\n        }\n      ],\n      \"prediction_window\": \"<number>\",\n      \"status\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"ended_at\": \"<string>\",\n      \"locked_at\": \"<string>\"\n    }\n  ],\n  \"pagination\": {}\n}"
						}
					]
				},
				{
					"name": "Create Prediction",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/predictions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"predictions"
							]
						},
						"description": "Create a Channel Points Prediction."
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/predictions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"predictions"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/predictions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"predictions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/predictions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"predictions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"title\": \"<string>\",\n      \"winning_outcome_id\": \"<string>\",\n      \"outcomes\": [\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"users\": \"<number>\",\n          \"channel_points\": \"<number>\",\n          \"top_predictors\": \"<string>\",\n          \"color\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"users\": \"<number>\",\n          \"channel_points\": \"<number>\",\n          \"top_predictors\": \"<string>\",\n          \"color\": \"<string>\"\n        }\n      ],\n      \"prediction_window\": \"<number>\",\n      \"status\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"ended_at\": \"<string>\",\n      \"locked_at\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"title\": \"<string>\",\n      \"winning_outcome_id\": \"<string>\",\n      \"outcomes\": [\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"users\": \"<number>\",\n          \"channel_points\": \"<number>\",\n          \"top_predictors\": \"<string>\",\n          \"color\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"users\": \"<number>\",\n          \"channel_points\": \"<number>\",\n          \"top_predictors\": \"<string>\",\n          \"color\": \"<string>\"\n        }\n      ],\n      \"prediction_window\": \"<number>\",\n      \"status\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"ended_at\": \"<string>\",\n      \"locked_at\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/predictions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"predictions"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "End Prediction",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/predictions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"predictions"
							]
						},
						"description": "Locks, resolves, or cancels a Channel Points Prediction."
					},
					"response": [
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/predictions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"predictions"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/predictions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"predictions"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/predictions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"predictions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/predictions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"predictions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"title\": \"<string>\",\n      \"winning_outcome_id\": \"<string>\",\n      \"outcomes\": [\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"users\": \"<number>\",\n          \"channel_points\": \"<number>\",\n          \"top_predictors\": \"<string>\",\n          \"color\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"users\": \"<number>\",\n          \"channel_points\": \"<number>\",\n          \"top_predictors\": \"<string>\",\n          \"color\": \"<string>\"\n        }\n      ],\n      \"prediction_window\": \"<number>\",\n      \"status\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"ended_at\": \"<string>\",\n      \"locked_at\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"title\": \"<string>\",\n      \"winning_outcome_id\": \"<string>\",\n      \"outcomes\": [\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"users\": \"<number>\",\n          \"channel_points\": \"<number>\",\n          \"top_predictors\": \"<string>\",\n          \"color\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"title\": \"<string>\",\n          \"users\": \"<number>\",\n          \"channel_points\": \"<number>\",\n          \"top_predictors\": \"<string>\",\n          \"color\": \"<string>\"\n        }\n      ],\n      \"prediction_window\": \"<number>\",\n      \"status\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"ended_at\": \"<string>\",\n      \"locked_at\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "raids",
			"item": [
				{
					"name": "Start a raid",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/raids?from_broadcaster_id=<string>&to_broadcaster_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"raids"
							],
							"query": [
								{
									"key": "from_broadcaster_id",
									"value": "<string>"
								},
								{
									"key": "to_broadcaster_id",
									"value": "<string>"
								}
							]
						},
						"description": "Raid another channel by sending the broadcaster’s viewers to the targeted channel."
					},
					"response": [
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/raids?from_broadcaster_id=<string>&to_broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"raids"
									],
									"query": [
										{
											"key": "from_broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "to_broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/raids?from_broadcaster_id=<string>&to_broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"raids"
									],
									"query": [
										{
											"key": "from_broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "to_broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/raids?from_broadcaster_id=<string>&to_broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"raids"
									],
									"query": [
										{
											"key": "from_broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "to_broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/raids?from_broadcaster_id=<string>&to_broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"raids"
									],
									"query": [
										{
											"key": "from_broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "to_broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"created_at\": \"<string>\",\n      \"is_mature\": \"<boolean>\"\n    },\n    {\n      \"created_at\": \"<string>\",\n      \"is_mature\": \"<boolean>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Cancel a raid",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/raids?broadcaster_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"raids"
							],
							"query": [
								{
									"key": "broadcaster_id",
									"value": "<string>"
								}
							]
						},
						"description": "Cancel a pending raid."
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/raids?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"raids"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/raids?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"raids"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/raids?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"raids"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/raids?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"raids"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "schedule",
			"item": [
				{
					"name": "icalendar",
					"item": [
						{
							"name": "Get Channel iCalendar",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schedule/icalendar?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule",
										"icalendar"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the broadcaster’s streaming schedule as an iCalendar."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/icalendar?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"icalendar"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/icalendar?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"icalendar"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/icalendar?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"icalendar"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/icalendar?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"icalendar"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "settings",
					"item": [
						{
							"name": "Update Channel Stream Schedule",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schedule/settings?broadcaster_id=<string>&is_vacation_enabled=<string>&vacation_start_time=<string>&vacation_end_time=<string>&timezone=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule",
										"settings"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "is_vacation_enabled",
											"value": "<string>"
										},
										{
											"key": "vacation_start_time",
											"value": "<string>"
										},
										{
											"key": "vacation_end_time",
											"value": "<string>"
										},
										{
											"key": "timezone",
											"value": "<string>"
										}
									]
								},
								"description": "Updates the broadcaster’s schedule settings, such as scheduling a vacation."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/settings?broadcaster_id=<string>&is_vacation_enabled=<string>&vacation_start_time=<string>&vacation_end_time=<string>&timezone=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "is_vacation_enabled",
													"value": "<string>"
												},
												{
													"key": "vacation_start_time",
													"value": "<string>"
												},
												{
													"key": "vacation_end_time",
													"value": "<string>"
												},
												{
													"key": "timezone",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/settings?broadcaster_id=<string>&is_vacation_enabled=<string>&vacation_start_time=<string>&vacation_end_time=<string>&timezone=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "is_vacation_enabled",
													"value": "<string>"
												},
												{
													"key": "vacation_start_time",
													"value": "<string>"
												},
												{
													"key": "vacation_end_time",
													"value": "<string>"
												},
												{
													"key": "timezone",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/settings?broadcaster_id=<string>&is_vacation_enabled=<string>&vacation_start_time=<string>&vacation_end_time=<string>&timezone=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "is_vacation_enabled",
													"value": "<string>"
												},
												{
													"key": "vacation_start_time",
													"value": "<string>"
												},
												{
													"key": "vacation_end_time",
													"value": "<string>"
												},
												{
													"key": "timezone",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/settings?broadcaster_id=<string>&is_vacation_enabled=<string>&vacation_start_time=<string>&vacation_end_time=<string>&timezone=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"settings"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "is_vacation_enabled",
													"value": "<string>"
												},
												{
													"key": "vacation_start_time",
													"value": "<string>"
												},
												{
													"key": "vacation_end_time",
													"value": "<string>"
												},
												{
													"key": "timezone",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "segment",
					"item": [
						{
							"name": "Create Channel Stream Schedule Segment",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schedule/segment?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule",
										"segment"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								},
								"description": "Adds a single or recurring broadcast to the broadcaster’s streaming schedule."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/segment?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"segment"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/segment?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"segment"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/segment?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"segment"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"segments\": [\n      {\n        \"id\": \"<string>\",\n        \"start_time\": \"<string>\",\n        \"end_time\": \"<string>\",\n        \"title\": \"<string>\",\n        \"canceled_until\": \"<string>\",\n        \"category\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"is_recurring\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"start_time\": \"<string>\",\n        \"end_time\": \"<string>\",\n        \"title\": \"<string>\",\n        \"canceled_until\": \"<string>\",\n        \"category\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"is_recurring\": \"<boolean>\"\n      }\n    ],\n    \"broadcaster_id\": \"<string>\",\n    \"broadcaster_name\": \"<string>\",\n    \"broadcaster_login\": \"<string>\",\n    \"vacation\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/segment?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"segment"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Channel Stream Schedule Segment",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schedule/segment?broadcaster_id=<string>&id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule",
										"segment"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										}
									]
								},
								"description": "Updates a scheduled broadcast segment."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/segment?broadcaster_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"segment"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/segment?broadcaster_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"segment"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/segment?broadcaster_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"segment"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/segment?broadcaster_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"segment"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"segments\": [\n      {\n        \"id\": \"<string>\",\n        \"start_time\": \"<string>\",\n        \"end_time\": \"<string>\",\n        \"title\": \"<string>\",\n        \"canceled_until\": \"<string>\",\n        \"category\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"is_recurring\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"start_time\": \"<string>\",\n        \"end_time\": \"<string>\",\n        \"title\": \"<string>\",\n        \"canceled_until\": \"<string>\",\n        \"category\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"is_recurring\": \"<boolean>\"\n      }\n    ],\n    \"broadcaster_id\": \"<string>\",\n    \"broadcaster_name\": \"<string>\",\n    \"broadcaster_login\": \"<string>\",\n    \"vacation\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Delete Channel Stream Schedule Segment",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schedule/segment?broadcaster_id=<string>&id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule",
										"segment"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										}
									]
								},
								"description": "Deletes a broadcast from the broadcaster’s streaming schedule."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/segment?broadcaster_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"segment"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/segment?broadcaster_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"segment"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/segment?broadcaster_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"segment"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schedule/segment?broadcaster_id=<string>&id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schedule",
												"segment"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get Channel Stream Schedule",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/schedule?broadcaster_id=<string>&id=<string>&start_time=<string>&utc_offset=<string>&first=<string>&after=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schedule"
							],
							"query": [
								{
									"key": "broadcaster_id",
									"value": "<string>"
								},
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "start_time",
									"value": "<string>"
								},
								{
									"key": "utc_offset",
									"value": "<string>"
								},
								{
									"key": "first",
									"value": "<string>"
								},
								{
									"key": "after",
									"value": "<string>"
								}
							]
						},
						"description": "Gets the broadcaster’s streaming schedule."
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schedule?broadcaster_id=<string>&id=<string>&start_time=<string>&utc_offset=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "start_time",
											"value": "<string>"
										},
										{
											"key": "utc_offset",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schedule?broadcaster_id=<string>&id=<string>&start_time=<string>&utc_offset=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "start_time",
											"value": "<string>"
										},
										{
											"key": "utc_offset",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schedule?broadcaster_id=<string>&id=<string>&start_time=<string>&utc_offset=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "start_time",
											"value": "<string>"
										},
										{
											"key": "utc_offset",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"segments\": [\n      {\n        \"id\": \"<string>\",\n        \"start_time\": \"<string>\",\n        \"end_time\": \"<string>\",\n        \"title\": \"<string>\",\n        \"canceled_until\": \"<string>\",\n        \"category\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"is_recurring\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"start_time\": \"<string>\",\n        \"end_time\": \"<string>\",\n        \"title\": \"<string>\",\n        \"canceled_until\": \"<string>\",\n        \"category\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"is_recurring\": \"<boolean>\"\n      }\n    ],\n    \"broadcaster_id\": \"<string>\",\n    \"broadcaster_name\": \"<string>\",\n    \"broadcaster_login\": \"<string>\",\n    \"vacation\": \"<string>\"\n  },\n  \"pagination\": {}\n}"
						},
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schedule?broadcaster_id=<string>&id=<string>&start_time=<string>&utc_offset=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schedule"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "start_time",
											"value": "<string>"
										},
										{
											"key": "utc_offset",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "search",
			"item": [
				{
					"name": "categories",
					"item": [
						{
							"name": "Search Categories",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/search/categories?query=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"categories"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the games or categories that match the specified query."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/search/categories?query=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search",
												"categories"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/search/categories?query=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search",
												"categories"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/search/categories?query=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search",
												"categories"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"box_art_url\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"box_art_url\": \"<string>\"\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/search/categories?query=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search",
												"categories"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "channels",
					"item": [
						{
							"name": "Search Channels",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/search/channels?query=<string>&live_only=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"channels"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "live_only",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the channels that match the specified query and have streamed content within the past 6 months."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/search/channels?query=<string>&live_only=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search",
												"channels"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "live_only",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/search/channels?query=<string>&live_only=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search",
												"channels"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "live_only",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"broadcaster_language\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"display_name\": \"<string>\",\n      \"game_id\": \"<string>\",\n      \"game_name\": \"<string>\",\n      \"id\": \"<string>\",\n      \"is_live\": \"<boolean>\",\n      \"tag_ids\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"thumbnail_url\": \"<string>\",\n      \"title\": \"<string>\",\n      \"started_at\": \"<string>\"\n    },\n    {\n      \"broadcaster_language\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"display_name\": \"<string>\",\n      \"game_id\": \"<string>\",\n      \"game_name\": \"<string>\",\n      \"id\": \"<string>\",\n      \"is_live\": \"<boolean>\",\n      \"tag_ids\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"thumbnail_url\": \"<string>\",\n      \"title\": \"<string>\",\n      \"started_at\": \"<string>\"\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/search/channels?query=<string>&live_only=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search",
												"channels"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "live_only",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/search/channels?query=<string>&live_only=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search",
												"channels"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "live_only",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "streams",
			"item": [
				{
					"name": "key",
					"item": [
						{
							"name": "Get Stream Key",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/streams/key?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										"key"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the channel’s stream key."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/key?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"key"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/key?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"key"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"stream_key\": \"<string>\"\n    },\n    {\n      \"stream_key\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/key?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"key"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/key?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"key"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "followed",
					"item": [
						{
							"name": "Get Followed Streams",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/streams/followed?user_id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										"followed"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the list of broadcasters that the user follows and that are streaming live."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/followed?user_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"followed"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/followed?user_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"followed"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/followed?user_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"followed"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"game_id\": \"<string>\",\n      \"game_name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"title\": \"<string>\",\n      \"viewer_count\": \"<number>\",\n      \"started_at\": \"<string>\",\n      \"language\": \"<string>\",\n      \"thumbnail_url\": \"<string>\",\n      \"tag_ids\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"game_id\": \"<string>\",\n      \"game_name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"title\": \"<string>\",\n      \"viewer_count\": \"<number>\",\n      \"started_at\": \"<string>\",\n      \"language\": \"<string>\",\n      \"thumbnail_url\": \"<string>\",\n      \"tag_ids\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/followed?user_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"followed"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "markers",
					"item": [
						{
							"name": "Create Stream Marker",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/streams/markers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										"markers"
									]
								},
								"description": "Adds a marker to a live stream."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/markers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"markers"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/markers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"markers"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/markers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"markers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<number>\",\n      \"created_at\": \"<string>\",\n      \"description\": \"<string>\",\n      \"position_seconds\": \"<number>\"\n    },\n    {\n      \"id\": \"<number>\",\n      \"created_at\": \"<string>\",\n      \"description\": \"<string>\",\n      \"position_seconds\": \"<number>\"\n    }\n  ]\n}"
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/markers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"markers"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Stream Markers",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/streams/markers?user_id=<string>&video_id=<string>&first=<string>&before=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										"markers"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "video_id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								},
								"description": "Gets a list of markers from the user’s most recent stream or from the specified VOD/video."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/markers?user_id=<string>&video_id=<string>&first=<string>&before=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"markers"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "video_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/markers?user_id=<string>&video_id=<string>&first=<string>&before=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"markers"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "video_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"user_id\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"videos\": [\n        {\n          \"video_id\": \"<string>\",\n          \"markers\": [\n            {\n              \"id\": \"<string>\",\n              \"created_at\": \"<string>\",\n              \"description\": \"<string>\",\n              \"position_seconds\": \"<number>\",\n              \"URL\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"created_at\": \"<string>\",\n              \"description\": \"<string>\",\n              \"position_seconds\": \"<number>\",\n              \"URL\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"video_id\": \"<string>\",\n          \"markers\": [\n            {\n              \"id\": \"<string>\",\n              \"created_at\": \"<string>\",\n              \"description\": \"<string>\",\n              \"position_seconds\": \"<number>\",\n              \"URL\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"created_at\": \"<string>\",\n              \"description\": \"<string>\",\n              \"position_seconds\": \"<number>\",\n              \"URL\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"user_id\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"videos\": [\n        {\n          \"video_id\": \"<string>\",\n          \"markers\": [\n            {\n              \"id\": \"<string>\",\n              \"created_at\": \"<string>\",\n              \"description\": \"<string>\",\n              \"position_seconds\": \"<number>\",\n              \"URL\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"created_at\": \"<string>\",\n              \"description\": \"<string>\",\n              \"position_seconds\": \"<number>\",\n              \"URL\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"video_id\": \"<string>\",\n          \"markers\": [\n            {\n              \"id\": \"<string>\",\n              \"created_at\": \"<string>\",\n              \"description\": \"<string>\",\n              \"position_seconds\": \"<number>\",\n              \"URL\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"created_at\": \"<string>\",\n              \"description\": \"<string>\",\n              \"position_seconds\": \"<number>\",\n              \"URL\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/markers?user_id=<string>&video_id=<string>&first=<string>&before=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"markers"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "video_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/markers?user_id=<string>&video_id=<string>&first=<string>&before=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"markers"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "video_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "tags",
					"item": [
						{
							"name": "Get Stream Tags",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/streams/tags?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams",
										"tags"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the list of stream tags that the broadcaster or Twitch added to their channel."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/tags?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"tags"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/tags?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"tags"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/tags?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"tags"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/streams/tags?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"streams",
												"tags"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"tag_id\": \"<string>\",\n      \"is_auto\": \"<boolean>\",\n      \"localization_names\": {\n        \"bg-bg\": \"<string>\",\n        \"cs-cz\": \"<string>\",\n        \"da-dk\": \"<string>\",\n        \"de-de\": \"<string>\",\n        \"el-gr\": \"<string>\",\n        \"en-us\": \"<string>\"\n      },\n      \"localization_descriptions\": {\n        \"bg-bg\": \"<string>\",\n        \"cs-cz\": \"<string>\",\n        \"da-dk\": \"<string>\",\n        \"de-de\": \"<string>\",\n        \"el-gr\": \"<string>\",\n        \"en-us\": \"<string>\"\n      }\n    },\n    {\n      \"tag_id\": \"<string>\",\n      \"is_auto\": \"<boolean>\",\n      \"localization_names\": {\n        \"bg-bg\": \"<string>\",\n        \"cs-cz\": \"<string>\",\n        \"da-dk\": \"<string>\",\n        \"de-de\": \"<string>\",\n        \"el-gr\": \"<string>\",\n        \"en-us\": \"<string>\"\n      },\n      \"localization_descriptions\": {\n        \"bg-bg\": \"<string>\",\n        \"cs-cz\": \"<string>\",\n        \"da-dk\": \"<string>\",\n        \"de-de\": \"<string>\",\n        \"el-gr\": \"<string>\",\n        \"en-us\": \"<string>\"\n      }\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Streams",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/streams?user_id=<string>&user_login=<string>&game_id=<string>&type=<string>&language=<string>&first=<string>&before=<string>&after=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"streams"
							],
							"query": [
								{
									"key": "user_id",
									"value": "<string>"
								},
								{
									"key": "user_login",
									"value": "<string>"
								},
								{
									"key": "game_id",
									"value": "<string>"
								},
								{
									"key": "type",
									"value": "<string>"
								},
								{
									"key": "language",
									"value": "<string>"
								},
								{
									"key": "first",
									"value": "<string>"
								},
								{
									"key": "before",
									"value": "<string>"
								},
								{
									"key": "after",
									"value": "<string>"
								}
							]
						},
						"description": "Gets a list of all streams."
					},
					"response": [
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/streams?user_id=<string>&user_login=<string>&game_id=<string>&type=<string>&language=<string>&first=<string>&before=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "user_login",
											"value": "<string>"
										},
										{
											"key": "game_id",
											"value": "<string>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "language",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/streams?user_id=<string>&user_login=<string>&game_id=<string>&type=<string>&language=<string>&first=<string>&before=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "user_login",
											"value": "<string>"
										},
										{
											"key": "game_id",
											"value": "<string>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "language",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/streams?user_id=<string>&user_login=<string>&game_id=<string>&type=<string>&language=<string>&first=<string>&before=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "user_login",
											"value": "<string>"
										},
										{
											"key": "game_id",
											"value": "<string>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "language",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/streams?user_id=<string>&user_login=<string>&game_id=<string>&type=<string>&language=<string>&first=<string>&before=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"streams"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "user_login",
											"value": "<string>"
										},
										{
											"key": "game_id",
											"value": "<string>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "language",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"game_id\": \"<string>\",\n      \"game_name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"title\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"viewer_count\": \"<number>\",\n      \"started_at\": \"<string>\",\n      \"language\": \"<string>\",\n      \"thumbnail_url\": \"<string>\",\n      \"tag_ids\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_mature\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"game_id\": \"<string>\",\n      \"game_name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"title\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"viewer_count\": \"<number>\",\n      \"started_at\": \"<string>\",\n      \"language\": \"<string>\",\n      \"thumbnail_url\": \"<string>\",\n      \"tag_ids\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"is_mature\": \"<boolean>\"\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "subscriptions",
			"item": [
				{
					"name": "user",
					"item": [
						{
							"name": "Check User Subscription",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/user?broadcaster_id=<string>&user_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"user"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<string>"
										}
									]
								},
								"description": "Checks whether the user subscribes to the broadcaster’s channel."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscriptions/user?broadcaster_id=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscriptions",
												"user"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"is_gift\": \"<boolean>\",\n      \"tier\": \"<string>\"\n    },\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"is_gift\": \"<boolean>\",\n      \"tier\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscriptions/user?broadcaster_id=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscriptions",
												"user"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscriptions/user?broadcaster_id=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscriptions",
												"user"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscriptions/user?broadcaster_id=<string>&user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscriptions",
												"user"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get Broadcaster Subscriptions",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions?broadcaster_id=<string>&user_id=<string>&first=<string>&after=<string>&before=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions"
							],
							"query": [
								{
									"key": "broadcaster_id",
									"value": "<string>"
								},
								{
									"key": "user_id",
									"value": "<string>"
								},
								{
									"key": "first",
									"value": "<string>"
								},
								{
									"key": "after",
									"value": "<string>"
								},
								{
									"key": "before",
									"value": "<string>"
								}
							]
						},
						"description": "Gets a list of users that subscribe to the specified broadcaster."
					},
					"response": [
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions?broadcaster_id=<string>&user_id=<string>&first=<string>&after=<string>&before=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions?broadcaster_id=<string>&user_id=<string>&first=<string>&after=<string>&before=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions?broadcaster_id=<string>&user_id=<string>&first=<string>&after=<string>&before=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"gifter_id\": \"<string>\",\n      \"gifter_login\": \"<string>\",\n      \"gifter_name\": \"<string>\",\n      \"is_gift\": \"<boolean>\",\n      \"tier\": \"<string>\",\n      \"plan_name\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"user_login\": \"<string>\"\n    },\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"gifter_id\": \"<string>\",\n      \"gifter_login\": \"<string>\",\n      \"gifter_name\": \"<string>\",\n      \"is_gift\": \"<boolean>\",\n      \"tier\": \"<string>\",\n      \"plan_name\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"user_login\": \"<string>\"\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  },\n  \"total\": \"<number>\",\n  \"points\": \"<number>\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions?broadcaster_id=<string>&user_id=<string>&first=<string>&after=<string>&before=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "tags",
			"item": [
				{
					"name": "streams",
					"item": [
						{
							"name": "Get All Stream Tags",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags/streams?tag_id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										"streams"
									],
									"query": [
										{
											"key": "tag_id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the list of all stream tags that Twitch defines. You can also filter the list by one or more tag IDs."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/streams?tag_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"streams"
											],
											"query": [
												{
													"key": "tag_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"tag_id\": \"<string>\",\n      \"is_auto\": \"<boolean>\",\n      \"localization_names\": {\n        \"bg-bg\": \"<string>\",\n        \"cs-cz\": \"<string>\",\n        \"da-dk\": \"<string>\",\n        \"de-de\": \"<string>\",\n        \"el-gr\": \"<string>\",\n        \"en-us\": \"<string>\"\n      },\n      \"localization_descriptions\": {\n        \"bg-bg\": \"<string>\",\n        \"cs-cz\": \"<string>\",\n        \"da-dk\": \"<string>\",\n        \"de-de\": \"<string>\",\n        \"el-gr\": \"<string>\",\n        \"en-us\": \"<string>\"\n      }\n    },\n    {\n      \"tag_id\": \"<string>\",\n      \"is_auto\": \"<boolean>\",\n      \"localization_names\": {\n        \"bg-bg\": \"<string>\",\n        \"cs-cz\": \"<string>\",\n        \"da-dk\": \"<string>\",\n        \"de-de\": \"<string>\",\n        \"el-gr\": \"<string>\",\n        \"en-us\": \"<string>\"\n      },\n      \"localization_descriptions\": {\n        \"bg-bg\": \"<string>\",\n        \"cs-cz\": \"<string>\",\n        \"da-dk\": \"<string>\",\n        \"de-de\": \"<string>\",\n        \"el-gr\": \"<string>\",\n        \"en-us\": \"<string>\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"cursor\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/streams?tag_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"streams"
											],
											"query": [
												{
													"key": "tag_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/streams?tag_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"streams"
											],
											"query": [
												{
													"key": "tag_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/streams?tag_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"streams"
											],
											"query": [
												{
													"key": "tag_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "teams",
			"item": [
				{
					"name": "channel",
					"item": [
						{
							"name": "Get Channel Teams",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/teams/channel?broadcaster_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										"channel"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the list of Twitch teams that the broadcaster is a member of."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/teams/channel?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"teams",
												"channel"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/teams/channel?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"teams",
												"channel"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"background_image_url\": \"<string>\",\n      \"banner\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"info\": \"<string>\",\n      \"thumbnail_url\": \"<string>\",\n      \"team_name\": \"<string>\",\n      \"team_display_name\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"broadcaster_id\": \"<string>\",\n      \"broadcaster_name\": \"<string>\",\n      \"broadcaster_login\": \"<string>\",\n      \"background_image_url\": \"<string>\",\n      \"banner\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"info\": \"<string>\",\n      \"thumbnail_url\": \"<string>\",\n      \"team_name\": \"<string>\",\n      \"team_display_name\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/teams/channel?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"teams",
												"channel"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/teams/channel?broadcaster_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"teams",
												"channel"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get Teams",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/teams?name=<string>&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams"
							],
							"query": [
								{
									"key": "name",
									"value": "<string>"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						},
						"description": "Gets information about the specified Twitch team."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/teams?name=<string>&id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"users\": [\n        {\n          \"user_id\": \"<string>\",\n          \"user_name\": \"<string>\",\n          \"user_login\": \"<string>\"\n        },\n        {\n          \"user_id\": \"<string>\",\n          \"user_name\": \"<string>\",\n          \"user_login\": \"<string>\"\n        }\n      ],\n      \"background_image_url\": \"<string>\",\n      \"banner\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"info\": \"<string>\",\n      \"thumbnail_url\": \"<string>\",\n      \"team_name\": \"<string>\",\n      \"team_display_name\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"users\": [\n        {\n          \"user_id\": \"<string>\",\n          \"user_name\": \"<string>\",\n          \"user_login\": \"<string>\"\n        },\n        {\n          \"user_id\": \"<string>\",\n          \"user_name\": \"<string>\",\n          \"user_login\": \"<string>\"\n        }\n      ],\n      \"background_image_url\": \"<string>\",\n      \"banner\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"info\": \"<string>\",\n      \"thumbnail_url\": \"<string>\",\n      \"team_name\": \"<string>\",\n      \"team_display_name\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/teams?name=<string>&id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/teams?name=<string>&id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/teams?name=<string>&id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "blocks",
					"item": [
						{
							"name": "Get User Block List",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/blocks?broadcaster_id=<string>&first=<string>&after=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"blocks"
									],
									"query": [
										{
											"key": "broadcaster_id",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the list of users that the broadcaster has blocked."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/blocks?broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"blocks"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/blocks?broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"blocks"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/blocks?broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"blocks"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"display_name\": \"<string>\"\n    },\n    {\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"display_name\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/blocks?broadcaster_id=<string>&first=<string>&after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"blocks"
											],
											"query": [
												{
													"key": "broadcaster_id",
													"value": "<string>"
												},
												{
													"key": "first",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Block User",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/blocks?target_user_id=<string>&source_context=<string>&reason=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"blocks"
									],
									"query": [
										{
											"key": "target_user_id",
											"value": "<string>"
										},
										{
											"key": "source_context",
											"value": "<string>"
										},
										{
											"key": "reason",
											"value": "<string>"
										}
									]
								},
								"description": "Blocks the specified user from interacting with or having contact with the broadcaster."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/blocks?target_user_id=<string>&source_context=<string>&reason=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"blocks"
											],
											"query": [
												{
													"key": "target_user_id",
													"value": "<string>"
												},
												{
													"key": "source_context",
													"value": "<string>"
												},
												{
													"key": "reason",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/blocks?target_user_id=<string>&source_context=<string>&reason=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"blocks"
											],
											"query": [
												{
													"key": "target_user_id",
													"value": "<string>"
												},
												{
													"key": "source_context",
													"value": "<string>"
												},
												{
													"key": "reason",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/blocks?target_user_id=<string>&source_context=<string>&reason=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"blocks"
											],
											"query": [
												{
													"key": "target_user_id",
													"value": "<string>"
												},
												{
													"key": "source_context",
													"value": "<string>"
												},
												{
													"key": "reason",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/blocks?target_user_id=<string>&source_context=<string>&reason=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"blocks"
											],
											"query": [
												{
													"key": "target_user_id",
													"value": "<string>"
												},
												{
													"key": "source_context",
													"value": "<string>"
												},
												{
													"key": "reason",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Unblock User",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/blocks?target_user_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"blocks"
									],
									"query": [
										{
											"key": "target_user_id",
											"value": "<string>"
										}
									]
								},
								"description": "Removes the user from the broadcaster’s list of blocked users."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/blocks?target_user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"blocks"
											],
											"query": [
												{
													"key": "target_user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/blocks?target_user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"blocks"
											],
											"query": [
												{
													"key": "target_user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/blocks?target_user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"blocks"
											],
											"query": [
												{
													"key": "target_user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/blocks?target_user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"blocks"
											],
											"query": [
												{
													"key": "target_user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "extensions",
					"item": [
						{
							"name": "list",
							"item": [
								{
									"name": "Get User Extensions",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://id.twitch.tv/oauth2/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/extensions/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"extensions",
												"list"
											]
										},
										"description": "Gets a list of all extensions (both active and inactive) that the broadcaster has installed."
									},
									"response": [
										{
											"name": "Internal Server Error: Something bad happened on our side",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/extensions/list",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"extensions",
														"list"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/extensions/list",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"extensions",
														"list"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"version\": \"<string>\",\n      \"name\": \"<string>\",\n      \"can_activate\": \"<boolean>\",\n      \"type\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"version\": \"<string>\",\n      \"name\": \"<string>\",\n      \"can_activate\": \"<boolean>\",\n      \"type\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthenticated: Missing/invalid Token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/extensions/list",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"extensions",
														"list"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) ",
														"key": "client_id",
														"value": "<string>"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/extensions/list",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"extensions",
														"list"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get User Active Extensions",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/extensions?user_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"extensions"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<string>"
										}
									]
								},
								"description": "Gets the active extensions that the broadcaster has installed for each configuration."
							},
							"response": [
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/extensions?user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"extensions"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/extensions?user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"extensions"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/extensions?user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"extensions"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"panel\": {\n      \"1\": {\n        \"active\": \"<boolean>\",\n        \"id\": \"<string>\",\n        \"version\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"2\": {\n        \"active\": \"<boolean>\",\n        \"id\": \"<string>\",\n        \"version\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"3\": {\n        \"active\": \"<boolean>\",\n        \"id\": \"<string>\",\n        \"version\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"overlay\": {\n      \"1\": {\n        \"active\": \"<boolean>\",\n        \"id\": \"<string>\",\n        \"version\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"component\": {\n      \"1\": {\n        \"active\": \"<boolean>\",\n        \"id\": \"<string>\",\n        \"version\": \"<string>\",\n        \"name\": \"<string>\",\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"2\": {\n        \"active\": \"<boolean>\"\n      }\n    }\n  }\n}"
								},
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/extensions?user_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"extensions"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update User Extensions",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://id.twitch.tv/oauth2/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/extensions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"extensions"
									]
								},
								"description": "Updates an installed extension’s information."
							},
							"response": [
								{
									"name": "Internal Server Error: Something bad happened on our side",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/extensions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"extensions"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthenticated: Missing/invalid Token",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/extensions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"extensions"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/extensions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"extensions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"panel\": {\n      \"1\": {\n        \"active\": \"<boolean>\",\n        \"id\": \"<string>\",\n        \"version\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"2\": {\n        \"active\": \"<boolean>\",\n        \"id\": \"<string>\",\n        \"version\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"3\": {\n        \"active\": \"<boolean>\",\n        \"id\": \"<string>\",\n        \"version\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"overlay\": {\n      \"1\": {\n        \"active\": \"<boolean>\",\n        \"id\": \"<string>\",\n        \"version\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    \"component\": {\n      \"1\": {\n        \"active\": \"<boolean>\",\n        \"id\": \"<string>\",\n        \"version\": \"<string>\",\n        \"name\": \"<string>\",\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"2\": {\n        \"active\": \"<boolean>\"\n      }\n    }\n  }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) ",
												"key": "client_id",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/extensions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"extensions"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get Users",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users?id=<string>&login=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "login",
									"value": "<string>"
								}
							]
						},
						"description": "Gets information about one or more users."
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?id=<string>&login=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "login",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?id=<string>&login=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "login",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?id=<string>&login=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "login",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"login\": \"<string>\",\n      \"display_name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"broadcaster_type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"profile_image_url\": \"<string>\",\n      \"offline_image_url\": \"<string>\",\n      \"view_count\": \"<number>\",\n      \"email\": \"<string>\",\n      \"created_at\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"login\": \"<string>\",\n      \"display_name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"broadcaster_type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"profile_image_url\": \"<string>\",\n      \"offline_image_url\": \"<string>\",\n      \"view_count\": \"<number>\",\n      \"email\": \"<string>\",\n      \"created_at\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?id=<string>&login=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "login",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users?description=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "description",
									"value": "<string>"
								}
							]
						},
						"description": "Updates the user’s information."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?description=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "description",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"login\": \"<string>\",\n      \"display_name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"broadcaster_type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"profile_image_url\": \"<string>\",\n      \"offline_image_url\": \"<string>\",\n      \"view_count\": \"<number>\",\n      \"email\": \"<string>\",\n      \"created_at\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"login\": \"<string>\",\n      \"display_name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"broadcaster_type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"profile_image_url\": \"<string>\",\n      \"offline_image_url\": \"<string>\",\n      \"view_count\": \"<number>\",\n      \"email\": \"<string>\",\n      \"created_at\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?description=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "description",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?description=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "description",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?description=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "description",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "videos",
			"item": [
				{
					"name": "Get Videos",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/videos?id=<string>&user_id=<string>&game_id=<string>&language=<string>&period=<string>&sort=<string>&type=<string>&first=<string>&after=<string>&before=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"videos"
							],
							"query": [
								{
									"key": "id",
									"value": "<string>"
								},
								{
									"key": "user_id",
									"value": "<string>"
								},
								{
									"key": "game_id",
									"value": "<string>"
								},
								{
									"key": "language",
									"value": "<string>"
								},
								{
									"key": "period",
									"value": "<string>"
								},
								{
									"key": "sort",
									"value": "<string>"
								},
								{
									"key": "type",
									"value": "<string>"
								},
								{
									"key": "first",
									"value": "<string>"
								},
								{
									"key": "after",
									"value": "<string>"
								},
								{
									"key": "before",
									"value": "<string>"
								}
							]
						},
						"description": "Gets information about one or more published videos."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/videos?id=<string>&user_id=<string>&game_id=<string>&language=<string>&period=<string>&sort=<string>&type=<string>&first=<string>&after=<string>&before=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"videos"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "game_id",
											"value": "<string>"
										},
										{
											"key": "language",
											"value": "<string>"
										},
										{
											"key": "period",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"stream_id\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"title\": \"<string>\",\n      \"description\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"published_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"thumbnail_url\": \"<string>\",\n      \"viewable\": \"<string>\",\n      \"view_count\": \"<number>\",\n      \"language\": \"<string>\",\n      \"type\": \"<string>\",\n      \"duration\": \"<string>\",\n      \"muted_segments\": [\n        {\n          \"duration\": \"<number>\",\n          \"offset\": \"<number>\"\n        },\n        {\n          \"duration\": \"<number>\",\n          \"offset\": \"<number>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"stream_id\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"user_login\": \"<string>\",\n      \"user_name\": \"<string>\",\n      \"title\": \"<string>\",\n      \"description\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"published_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"thumbnail_url\": \"<string>\",\n      \"viewable\": \"<string>\",\n      \"view_count\": \"<number>\",\n      \"language\": \"<string>\",\n      \"type\": \"<string>\",\n      \"duration\": \"<string>\",\n      \"muted_segments\": [\n        {\n          \"duration\": \"<number>\",\n          \"offset\": \"<number>\"\n        },\n        {\n          \"duration\": \"<number>\",\n          \"offset\": \"<number>\"\n        }\n      ]\n    }\n  ],\n  \"pagination\": {}\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/videos?id=<string>&user_id=<string>&game_id=<string>&language=<string>&period=<string>&sort=<string>&type=<string>&first=<string>&after=<string>&before=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"videos"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "game_id",
											"value": "<string>"
										},
										{
											"key": "language",
											"value": "<string>"
										},
										{
											"key": "period",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/videos?id=<string>&user_id=<string>&game_id=<string>&language=<string>&period=<string>&sort=<string>&type=<string>&first=<string>&after=<string>&before=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"videos"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "game_id",
											"value": "<string>"
										},
										{
											"key": "language",
											"value": "<string>"
										},
										{
											"key": "period",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/videos?id=<string>&user_id=<string>&game_id=<string>&language=<string>&period=<string>&sort=<string>&type=<string>&first=<string>&after=<string>&before=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"videos"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<string>"
										},
										{
											"key": "game_id",
											"value": "<string>"
										},
										{
											"key": "language",
											"value": "<string>"
										},
										{
											"key": "period",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "first",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Videos",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/videos?id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"videos"
							],
							"query": [
								{
									"key": "id",
									"value": "<string>"
								}
							]
						},
						"description": "Deletes one or more videos."
					},
					"response": [
						{
							"name": "Deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/videos?id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"videos"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/videos?id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"videos"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/videos?id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"videos"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/videos?id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"videos"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "whispers",
			"item": [
				{
					"name": "Send Whisper",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "channel:edit:commercial channel:read:ads channel:manage:ads analytics:read:extensions analytics:read:games bits:read channel:manage:broadcast channel:read:editors user:read:follows moderator:read:followers channel:manage:redemptions channel:read:redemptions channel:read:charity moderator:read:chatters moderator:read:chat_settings user:read:emotes moderator:manage:chat_settings moderator:manage:announcements moderator:manage:shoutouts user:manage:chat_color clips:edit channel:read:goals channel:read:guest_star moderator:read:guest_star channel:manage:guest_star moderator:manage:guest_star channel:read:hype_train moderation:read moderator:manage:automod moderator:read:automod_settings moderator:manage:automod_settings moderator:manage:banned_users moderator:read:unban_requests moderator:manage:unban_requests moderator:read:blocked_terms moderator:manage:blocked_terms moderator:manage:chat_messages user:read:moderated_channels channel:manage:moderators channel:read:vips channel:manage:vips moderator:manage:shield_mode moderator:read:shield_mode channel:read:polls channel:manage:polls channel:read:predictions channel:manage:predictions channel:manage:raids channel:manage:schedule channel:read:stream_key user:read:broadcast channel:read:subscriptions user:read:subscriptions user:read:email user:edit user:read:blocked_users user:manage:blocked_users channel:manage:extensions channel:manage:videos user:manage:whispers",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://id.twitch.tv/oauth2/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "client_id",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/whispers?from_user_id=<string>&to_user_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"whispers"
							],
							"query": [
								{
									"key": "from_user_id",
									"value": "<string>"
								},
								{
									"key": "to_user_id",
									"value": "<string>"
								}
							]
						},
						"description": "Sends a whisper message to the specified user."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/whispers?from_user_id=<string>&to_user_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"whispers"
									],
									"query": [
										{
											"key": "from_user_id",
											"value": "<string>"
										},
										{
											"key": "to_user_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/whispers?from_user_id=<string>&to_user_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"whispers"
									],
									"query": [
										{
											"key": "from_user_id",
											"value": "<string>"
										},
										{
											"key": "to_user_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthenticated: Missing/invalid Token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/whispers?from_user_id=<string>&to_user_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"whispers"
									],
									"query": [
										{
											"key": "from_user_id",
											"value": "<string>"
										},
										{
											"key": "to_user_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error: Something bad happened on our side",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "client_id",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/whispers?from_user_id=<string>&to_user_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"whispers"
									],
									"query": [
										{
											"key": "from_user_id",
											"value": "<string>"
										},
										{
											"key": "to_user_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.twitch.tv/helix"
		}
	]
}